{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Input from \"../componets/Input\";\nimport Buttons from \"../componets/Buttons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Signup = function Signup(props) {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    phoneNumber = _useState6[0],\n    setPhoneNumber = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    password = _useState8[0],\n    setPassword = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    confirmPassword = _useState10[0],\n    setConfirmPassword = _useState10[1];\n  var registerUser = function registerUser() {\n    var userId = uuid.v4();\n    firebase().collection(\"user\").doc(userId).set({\n      name: name,\n      email: email,\n      phoneNumber: phoneNumber,\n      password: password,\n      confirmPassword: confirmPassword,\n      userId: userId\n    }).then(function (res) {\n      console.log(\"user created\");\n    }).catch(function (error) {\n      console.log(\"error\");\n    });\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Sign up\"\n      }), _jsx(Input, {\n        placeholder: \"Enter Name\",\n        value: name,\n        onChangeText: function onChangeText(text) {\n          return setName(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Enter Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Enter Phone Number\",\n        keyboardType: 'number-pad',\n        value: phoneNumber,\n        onChangeText: function onChangeText(text) {\n          return setPhoneNumber(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Enter Password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Confirm Password\",\n        value: confirmPassword,\n        onChangeText: function onChangeText(text) {\n          return setConfirmPassword(text);\n        }\n      }), _jsx(Buttons, {\n        title: \"continue\"\n      }), _jsxs(View, {\n        style: styles.loginContainer,\n        children: [_jsx(Text, {\n          style: styles.loginText,\n          children: \"Already have an account?\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.navigate('Login');\n          },\n          children: _jsx(Text, {\n            style: styles.loginLink,\n            children: \" Login\"\n          })\n        })]\n      })]\n    });\n  };\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    title: {\n      fontSize: 30,\n      color: 'black',\n      alignSelf: 'center',\n      marginTop: 80,\n      marginBottom: 50\n    },\n    loginContainer: {\n      flexDirection: 'row',\n      marginTop: 30,\n      marginLeft: '25%',\n      fontSize: 15\n    },\n    loginText: {\n      color: 'black'\n    },\n    loginLink: {\n      color: '#1B9CA9'\n    }\n  });\n};\nexport default Signup;","map":{"version":3,"names":["React","useState","Text","TextInput","TouchableOpacity","StyleSheet","View","Input","Buttons","jsx","_jsx","jsxs","_jsxs","Signup","props","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","phoneNumber","setPhoneNumber","_useState7","_useState8","password","setPassword","_useState9","_useState10","confirmPassword","setConfirmPassword","registerUser","userId","uuid","v4","firebase","collection","doc","set","then","res","console","log","catch","error","style","styles","container","children","title","placeholder","value","onChangeText","text","keyboardType","loginContainer","loginText","onPress","navigation","navigate","loginLink","create","flex","backgroundColor","fontSize","color","alignSelf","marginTop","marginBottom","flexDirection","marginLeft"],"sources":["C:/Users/786/Desktop/Chat-App/my-app/src/Screen/Signup.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Text, TextInput, TouchableOpacity, StyleSheet, View } from \"react-native\";\r\nimport Input from \"../componets/Input\";\r\nimport Buttons from \"../componets/Buttons\";\r\n\r\nconst Signup = (props) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const registerUser=()=>{\r\n        const userId=uuid.v4()\r\n    firebase().collection(\"user\").doc(userId).set({\r\n        name:name,\r\n\r\n        email:email,\r\n        phoneNumber:phoneNumber,\r\n        password:password,\r\n        confirmPassword:confirmPassword,\r\n        userId:userId,\r\n    }).then(res=>\r\n    {\r\n        console.log(\"user created\");\r\n    }).catch(error=>{\r\n        console.log(\"error\");\r\n    });\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Sign up</Text>\r\n            <Input\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChangeText={(text) => setName(text)}\r\n            />\r\n            <Input\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChangeText={(text) => setEmail(text)}\r\n            />\r\n            <Input\r\n                placeholder=\"Enter Phone Number\"\r\n                keyboardType={'number-pad'}\r\n                value={phoneNumber}\r\n                onChangeText={(text) => setPhoneNumber(text)}\r\n            />\r\n            <Input\r\n                placeholder=\"Enter Password\"\r\n                value={password}\r\n                onChangeText={(text) => setPassword(text)}\r\n            />\r\n            <Input\r\n                placeholder=\"Confirm Password\"\r\n                value={confirmPassword}\r\n                onChangeText={(text) => setConfirmPassword(text)}\r\n            />\r\n            <Buttons title='continue'/>\r\n            <View style={styles.loginContainer}>\r\n                <Text style={styles.loginText}>Already have an account?</Text>\r\n                <TouchableOpacity onPress={() => props.navigation.navigate('Login')}>\r\n                    <Text style={styles.loginLink}> Login</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        fontSize: 30,\r\n        color: 'black',\r\n        alignSelf: 'center',\r\n        marginTop: 80,\r\n        marginBottom: 50\r\n    },\r\n    loginContainer: {\r\n        flexDirection: 'row',\r\n        marginTop: 30,\r\n        marginLeft: '25%',\r\n        fontSize: 15,\r\n    },\r\n    loginText: {\r\n        color: 'black',\r\n    },\r\n    loginLink: {\r\n        color: '#1B9CA9',\r\n    }\r\n});\r\n}\r\nexport default Signup;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}