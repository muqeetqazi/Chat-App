{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from 'react';\nimport Input from \"../componets/Input\";\nimport Buttons from \"../componets/Buttons\";\nimport { avatars } from \"../Supports/avatar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login(props) {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(avatars[0].image.asset.url),\n    _useState6 = _slicedToArray(_useState5, 2),\n    avatar = _useState6[0],\n    setAvatar = _useState6[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: pic,\n      style: styles.backgroundImage,\n      resizeMode: \"cover\"\n    }), _jsxs(View, {\n      style: styles.maincomponent,\n      children: [_jsx(TouchableOpacity, {\n        style: {\n          alignItems: \"center\"\n        },\n        children: _jsx(Image, {\n          source: {\n            uri: avatar\n          },\n          style: styles.avatarImage,\n          resizeMode: \"contain\"\n        })\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Sign up\"\n      }), _jsx(Input, {\n        placeholder: \"Enter Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Enter Password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      }), _jsx(Buttons, {\n        title: \"Login\"\n      }), _jsxs(View, {\n        style: styles.loginContainer,\n        children: [_jsx(Text, {\n          style: styles.loginText,\n          children: \"Already have an account?\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.navigate('Login');\n          },\n          children: _jsx(Text, {\n            style: styles.loginLink,\n            children: \" Login\"\n          })\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  maincomponent: {\n    borderTopLeftRadius: 110,\n    backgroundColor: 'white',\n    marginTop: '40%'\n  },\n  title: {\n    fontSize: 20,\n    color: 'black',\n    alignSelf: 'center'\n  },\n  backgroundImage: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    height: '50%'\n  },\n  avatarImage: {\n    width: 50,\n    height: 50\n  },\n  loginContainer: {\n    flexDirection: 'row',\n    marginTop: 30,\n    marginLeft: '25%',\n    fontSize: 15\n  },\n  loginText: {\n    color: 'black'\n  },\n  loginLink: {\n    color: '#36802D'\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","useState","Input","Buttons","avatars","jsx","_jsx","jsxs","_jsxs","Login","props","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","image","asset","url","_useState6","avatar","setAvatar","View","style","styles","container","children","Image","source","pic","backgroundImage","resizeMode","maincomponent","TouchableOpacity","alignItems","uri","avatarImage","Text","title","placeholder","value","onChangeText","text","loginContainer","loginText","onPress","navigation","navigate","loginLink","StyleSheet","create","flex","backgroundColor","borderTopLeftRadius","marginTop","fontSize","color","alignSelf","position","top","left","right","height","width","flexDirection","marginLeft"],"sources":["C:/Users/786/Desktop/Chat-App/my-app/src/Screen/Login.js"],"sourcesContent":["import { View, Text,StyleSheet,TextInput,TouchableOpacity } from 'react-native'\r\nimport React, { useState } from 'react'\r\nimport Input from '../componets/Input'\r\nimport Buttons from '../componets/Buttons';\r\nimport { avatars } from '../Supports/avatar';\r\nconst Login = (props) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [avatar, setAvatar] = useState(avatars[0].image.asset.url);\r\n   \r\n    return (\r\n        <View style={styles.container}>\r\n            <Image source={pic} style={styles.backgroundImage} resizeMode=\"cover\" />\r\n            \r\n            <View style={styles.maincomponent}>\r\n                <TouchableOpacity style={{ alignItems: \"center\" }}>\r\n                    <Image source={{ uri: avatar }} style={styles.avatarImage} resizeMode=\"contain\" />\r\n                </TouchableOpacity>\r\n                <Text style={styles.title}>Sign up</Text>\r\n            <Input placeholder=\"Enter Email\" value={email} onChangeText={(text) => setEmail(text)} />\r\n    \r\n            <Input placeholder=\"Enter Password\" value={password} onChangeText={(text) => setPassword(text)} />\r\n            <Buttons title='Login' />\r\n            <View style={styles.loginContainer}>\r\n                <Text style={styles.loginText}>Already have an account?</Text>\r\n                <TouchableOpacity onPress={() => props.navigation.navigate('Login')}>\r\n                    <Text style={styles.loginLink}> Login</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    maincomponent:{\r\n        borderTopLeftRadius:110,\r\n        backgroundColor:'white',\r\nmarginTop:'40%'\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        color: 'black',\r\n        alignSelf: 'center',\r\n    },\r\n    backgroundImage: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        height:'50%'\r\n    },\r\n    avatarImage: {\r\n        width: 50,\r\n        height: 50,\r\n    },\r\n    loginContainer: {\r\n        flexDirection: 'row',\r\n        marginTop: 30,\r\n        marginLeft: '25%',\r\n        fontSize: 15,\r\n    },\r\n    loginText: {\r\n        color: 'black',\r\n    },\r\n    loginLink: {\r\n        color: '#36802D',\r\n    }\r\n});\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}