{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Input from \"../componets/Input\";\nimport Buttons from \"../componets/Buttons\";\nimport { avatars } from \"../Supports/avator\";\nimport uuid from 'uuid';\nimport firebase from '@react-native-firebase/firestore';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Signup = function Signup(props) {\n  var _avatars$;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    phoneNumber = _useState6[0],\n    setPhoneNumber = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    password = _useState8[0],\n    setPassword = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    confirmPassword = _useState10[0],\n    setConfirmPassword = _useState10[1];\n  var _useState11 = useState((_avatars$ = avatars[0]) == null ? void 0 : _avatars$.image.asset.url),\n    _useState12 = _slicedToArray(_useState11, 2),\n    selectedAvatar = _useState12[0],\n    setSelectedAvatar = _useState12[1];\n  var registerUser = function registerUser() {\n    var userId = uuid.v4();\n    firebase().collection(\"user\").doc(userId).set({\n      name: name,\n      email: email,\n      phoneNumber: phoneNumber,\n      password: password,\n      confirmPassword: confirmPassword,\n      userId: userId\n    }).then(function (res) {\n      console.log(\"User created\");\n    }).catch(function (error) {\n      console.log(\"Error creating user:\", error);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Sign up\"\n    }), _jsx(View, {\n      style: styles.avatarsContainer,\n      children: avatars.map(function (avatar, index) {\n        return _jsx(TouchableOpacity, {\n          style: {\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            return setSelectedAvatar(avatar.image.asset.url);\n          },\n          children: _jsx(Image, {\n            source: {\n              uri: avatar.image.asset.url\n            },\n            style: styles.avatarImage,\n            resizeMode: \"contain\"\n          })\n        }, index);\n      })\n    }), _jsx(Input, {\n      placeholder: \"Enter Name\",\n      value: name,\n      onChangeText: function onChangeText(text) {\n        return setName(text);\n      }\n    }), _jsx(Input, {\n      placeholder: \"Enter Email\",\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(Input, {\n      placeholder: \"Enter Phone Number\",\n      keyboardType: 'number-pad',\n      value: phoneNumber,\n      onChangeText: function onChangeText(text) {\n        return setPhoneNumber(text);\n      }\n    }), _jsx(Input, {\n      placeholder: \"Enter Password\",\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), _jsx(Input, {\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChangeText: function onChangeText(text) {\n        return setConfirmPassword(text);\n      }\n    }), _jsx(Buttons, {\n      title: \"continue\",\n      onPress: registerUser\n    }), _jsxs(View, {\n      style: styles.loginContainer,\n      children: [_jsx(Text, {\n        style: styles.loginText,\n        children: \"Already have an account?\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate('Login');\n        },\n        children: _jsx(Text, {\n          style: styles.loginLink,\n          children: \" Login\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  title: {\n    fontSize: 30,\n    color: 'black',\n    alignSelf: 'center',\n    marginTop: 80,\n    marginBottom: 50\n  },\n  avatarsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 20\n  },\n  avatarImage: {\n    width: 100,\n    height: 100\n  },\n  loginContainer: {\n    flexDirection: 'row',\n    marginTop: 30,\n    marginLeft: '25%',\n    fontSize: 15\n  },\n  loginText: {\n    color: 'black'\n  },\n  loginLink: {\n    color: '#1B9CA9'\n  }\n});\nexport default Signup;","map":{"version":3,"names":["React","useState","Text","TextInput","Image","TouchableOpacity","StyleSheet","View","Input","Buttons","avatars","uuid","firebase","jsx","_jsx","jsxs","_jsxs","Signup","props","_avatars$","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","phoneNumber","setPhoneNumber","_useState7","_useState8","password","setPassword","_useState9","_useState10","confirmPassword","setConfirmPassword","_useState11","image","asset","url","_useState12","selectedAvatar","setSelectedAvatar","registerUser","userId","v4","collection","doc","set","then","res","console","log","catch","error","style","styles","container","children","title","avatarsContainer","map","avatar","index","alignItems","onPress","source","uri","avatarImage","resizeMode","placeholder","value","onChangeText","text","keyboardType","loginContainer","loginText","navigation","navigate","loginLink","create","flex","backgroundColor","fontSize","color","alignSelf","marginTop","marginBottom","flexDirection","justifyContent","width","height","marginLeft"],"sources":["C:/Users/786/Desktop/Chat-App/my-app/src/Screen/Signup.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Text, TextInput, Image, TouchableOpacity, StyleSheet, View } from \"react-native\";\r\nimport Input from \"../componets/Input\";\r\nimport Buttons from \"../componets/Buttons\";\r\nimport { avatars } from \"../Supports/avator\"; // Assuming avatars is correctly imported\r\nimport uuid from 'uuid'; // Import uuid for generating user IDs\r\nimport firebase from '@react-native-firebase/firestore'; // Import firebase for Firestore interaction\r\n\r\nconst Signup = (props) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [selectedAvatar, setSelectedAvatar] = useState(avatars[0]?.image.asset.url);\r\n\r\n    const registerUser = () => {\r\n        const userId = uuid.v4();\r\n        firebase().collection(\"user\").doc(userId).set({\r\n            name: name,\r\n            email: email,\r\n            phoneNumber: phoneNumber,\r\n            password: password,\r\n            confirmPassword: confirmPassword,\r\n            userId: userId,\r\n        }).then(res => {\r\n            console.log(\"User created\");\r\n        }).catch(error => {\r\n            console.log(\"Error creating user:\", error);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Sign up</Text>\r\n            <View style={styles.avatarsContainer}>\r\n                {avatars.map((avatar, index) => (\r\n                    <TouchableOpacity\r\n                        key={index}\r\n                        style={{ alignItems: \"center\" }}\r\n                        onPress={() => setSelectedAvatar(avatar.image.asset.url)}\r\n                    >\r\n                        <Image\r\n                            source={{ uri: avatar.image.asset.url }}\r\n                            style={styles.avatarImage}\r\n                            resizeMode=\"contain\"\r\n                        />\r\n                    </TouchableOpacity>\r\n                ))}\r\n            </View>\r\n            <Input\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChangeText={(text) => setName(text)}\r\n            />\r\n            <Input\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChangeText={(text) => setEmail(text)}\r\n            />\r\n            <Input\r\n                placeholder=\"Enter Phone Number\"\r\n                keyboardType={'number-pad'}\r\n                value={phoneNumber}\r\n                onChangeText={(text) => setPhoneNumber(text)}\r\n            />\r\n            <Input\r\n                placeholder=\"Enter Password\"\r\n                value={password}\r\n                onChangeText={(text) => setPassword(text)}\r\n            />\r\n            <Input\r\n                placeholder=\"Confirm Password\"\r\n                value={confirmPassword}\r\n                onChangeText={(text) => setConfirmPassword(text)}\r\n            />\r\n            <Buttons title='continue' onPress={registerUser} />\r\n            <View style={styles.loginContainer}>\r\n                <Text style={styles.loginText}>Already have an account?</Text>\r\n                <TouchableOpacity onPress={() => props.navigation.navigate('Login')}>\r\n                    <Text style={styles.loginLink}> Login</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    title: {\r\n        fontSize: 30,\r\n        color: 'black',\r\n        alignSelf: 'center',\r\n        marginTop: 80,\r\n        marginBottom: 50\r\n    },\r\n    avatarsContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        marginBottom: 20,\r\n    },\r\n    avatarImage: {\r\n        width: 100,\r\n        height: 100,\r\n    },\r\n    loginContainer: {\r\n        flexDirection: 'row',\r\n        marginTop: 30,\r\n        marginLeft: '25%',\r\n        fontSize: 15,\r\n    },\r\n    loginText: {\r\n        color: 'black',\r\n    },\r\n    loginLink: {\r\n        color: '#1B9CA9',\r\n    }\r\n});\r\n\r\nexport default Signup;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}