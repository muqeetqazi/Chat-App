{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport React, { useEffect, useLayoutEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { firebaseAuth, firestoreDB } from \"../config/firebase\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { useDispatch } from \"react-redux\";\nimport { SET_USER } from \"../context/actions/useractions\";\nimport logo from \"../../assets/logo.png\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Splash = function Splash() {\n  var navigation = useNavigation();\n  var dispatch = useDispatch();\n  useLayoutEffect(function () {\n    checkLoggedUser();\n  }, []);\n  var checklogin = function () {\n    var _ref = _asyncToGenerator(function* () {});\n    return function checklogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var checkLoggedUser = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      firebaseAuth.onAuthStateChanged(function (userCred) {\n        if (userCred != null && userCred.uid) {\n          getDoc(doc(firestoreDB, \"user\", userCred == null ? void 0 : userCred.uid)).then(function (docSnap) {\n            if (docSnap.exists()) {\n              console.log(\"User Data :\", docSnap.data());\n              dispatch(SET_USER(docSnap.data()));\n              navigation.replace(\"HomeScreen\");\n            }\n          }).catch(function (error) {\n            console.error(\"Error fetching user data:\", error);\n            navigation.replace(\"Login\");\n          });\n        } else {\n          navigation.replace(\"Login\");\n        }\n      });\n    });\n    return function checkLoggedUser() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: logo,\n      resizeMode: \"contain\"\n    }), _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#43C651\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FAF9F6',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default Splash;","map":{"version":3,"names":["useNavigation","React","useEffect","useLayoutEffect","Text","View","StyleSheet","Image","ActivityIndicator","firebaseAuth","firestoreDB","doc","getDoc","useDispatch","SET_USER","logo","AsyncStorage","jsx","_jsx","jsxs","_jsxs","Splash","navigation","dispatch","checkLoggedUser","checklogin","_ref","_asyncToGenerator","apply","arguments","_ref2","onAuthStateChanged","userCred","uid","then","docSnap","exists","console","log","data","replace","catch","error","style","styles","container","children","source","resizeMode","size","color","create","flex","backgroundColor","justifyContent","alignItems"],"sources":["C:/Users/786/Desktop/Chat-App/my-app/src/Screen/Splash.js"],"sourcesContent":["import { useNavigation } from \"@react-navigation/native\";\r\nimport React, { useEffect, useLayoutEffect } from \"react\";\r\nimport { Text, View, StyleSheet, Image, ActivityIndicator } from \"react-native\";\r\nimport { firebaseAuth, firestoreDB } from \"../config/firebase\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SET_USER } from \"../context/actions/useractions\";\r\nimport logo from '../../assets/logo.png'; // Import the logo image here\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nconst Splash = () => {\r\n    const navigation = useNavigation();\r\n    const dispatch = useDispatch();\r\n\r\n    useLayoutEffect(() => {\r\n        checkLoggedUser();\r\n    }, []);\r\nconst checklogin=async()=>{}\r\n    const checkLoggedUser = async () => {\r\n        firebaseAuth.onAuthStateChanged((userCred) => {\r\n            if (userCred?.uid) {\r\n                getDoc(doc(firestoreDB, \"user\", userCred?.uid))\r\n                    .then((docSnap) => {\r\n                        if (docSnap.exists()) {\r\n                            console.log(\"User Data :\", docSnap.data());\r\n                            dispatch(SET_USER(docSnap.data()));\r\n                            \r\n                            navigation.replace(\"HomeScreen\");\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"Error fetching user data:\", error);\r\n                        \r\n                        navigation.replace(\"Login\");\r\n                    });\r\n            } else {\r\n                navigation.replace(\"Login\");\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Image source={logo} resizeMode='contain' />\r\n            <ActivityIndicator size={\"large\"} color={\"#43C651\"} />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#FAF9F6',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    }\r\n});\r\n\r\nexport default Splash;\r\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,KAAK,IAAIC,SAAS,EAAEC,eAAe,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,iBAAA;AAE1D,SAASC,YAAY,EAAEC,WAAW;AAClC,SAASC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAChD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ;AACjB,OAAOC,IAAI;AACX,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACrE,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EACjB,IAAMC,UAAU,GAAGtB,aAAa,CAAC,CAAC;EAClC,IAAMuB,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9BV,eAAe,CAAC,YAAM;IAClBqB,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EACV,IAAMC,UAAU;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAC,aAAS,CAAC,CAAC;IAAA,gBAAtBF,UAAUA,CAAA;MAAA,OAAAC,IAAA,CAAAE,KAAA,OAAAC,SAAA;IAAA;EAAA,GAAY;EACxB,IAAML,eAAe;IAAA,IAAAM,KAAA,GAAAH,iBAAA,CAAG,aAAY;MAChClB,YAAY,CAACsB,kBAAkB,CAAC,UAACC,QAAQ,EAAK;QAC1C,IAAIA,QAAQ,YAARA,QAAQ,CAAEC,GAAG,EAAE;UACfrB,MAAM,CAACD,GAAG,CAACD,WAAW,EAAE,MAAM,EAAEsB,QAAQ,oBAARA,QAAQ,CAAEC,GAAG,CAAC,CAAC,CAC1CC,IAAI,CAAC,UAACC,OAAO,EAAK;YACf,IAAIA,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;cAClBC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,OAAO,CAACI,IAAI,CAAC,CAAC,CAAC;cAC1ChB,QAAQ,CAACT,QAAQ,CAACqB,OAAO,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;cAElCjB,UAAU,CAACkB,OAAO,CAAC,YAAY,CAAC;YACpC;UACJ,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,KAAK,EAAK;YACdL,OAAO,CAACK,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;YAEjDpB,UAAU,CAACkB,OAAO,CAAC,OAAO,CAAC;UAC/B,CAAC,CAAC;QACV,CAAC,MAAM;UACHlB,UAAU,CAACkB,OAAO,CAAC,OAAO,CAAC;QAC/B;MACJ,CAAC,CAAC;IACN,CAAC;IAAA,gBArBKhB,eAAeA,CAAA;MAAA,OAAAM,KAAA,CAAAF,KAAA,OAAAC,SAAA;IAAA;EAAA,GAqBpB;EAED,OACIT,KAAA,CAACf,IAAI;IAACsC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1B5B,IAAA,CAACX,KAAK;MAACwC,MAAM,EAAEhC,IAAK;MAACiC,UAAU,EAAC;IAAS,CAAE,CAAC,EAC5C9B,IAAA,CAACV,iBAAiB;MAACyC,IAAI,EAAE,OAAQ;MAACC,KAAK,EAAE;IAAU,CAAE,CAAC;EAAA,CACpD,CAAC;AAEf,CAAC;AAED,IAAMN,MAAM,GAAGtC,UAAU,CAAC6C,MAAM,CAAC;EAC7BN,SAAS,EAAE;IACPO,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,SAAS;IAC1BC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC;AAEF,eAAelC,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}