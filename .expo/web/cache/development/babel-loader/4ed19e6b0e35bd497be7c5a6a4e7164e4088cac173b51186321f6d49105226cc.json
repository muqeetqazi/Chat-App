{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSelector } from \"react-redux\";\nimport { FontAwesome, Ionicons } from \"@expo/vector-icons\";\nimport logo from \"../../assets/logo.png\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen() {\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  console.log(\"logged user:\", user);\n  return _jsx(View, {\n    children: _jsxs(SafeAreaView, {\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        children: [_jsx(Image, {\n          source: logo,\n          style: {\n            height: 50,\n            width: 70,\n            marginTop: 40,\n            marginLeft: 20\n          },\n          resizeMode: \"contain\",\n          accessibilityLabel: \"Logo\"\n        }), _jsx(TouchableOpacity, {\n          style: {\n            marginLeft: 20\n          },\n          onPress: function onPress() {\n            return console.log('Profile picture pressed');\n          },\n          children: _jsx(Image, {\n            source: {\n              uri: user.profilePic\n            },\n            resizeMode: \"cover\",\n            style: {\n              marginLeft: 160,\n              marginTop: 30,\n              width: 50,\n              height: 50,\n              borderRadius: 25,\n              borderWidth: 3,\n              borderColor: '#77AB59'\n            }\n          })\n        })]\n      }), _jsx(ScrollView, {\n        children: _jsxs(View, {\n          children: [_jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              alignItems: 'center',\n              marginTop: 20,\n              marginLeft: 20\n            },\n            children: [_jsx(Text, {\n              style: {\n                fontWeight: \"bold\",\n                fontSize: 20\n              },\n              children: \"Messages\"\n            }), _jsx(TouchableOpacity, {\n              style: {\n                marginLeft: 170\n              },\n              children: _jsx(Ionicons, {\n                name: \"chatbox\",\n                size: 28,\n                color: \"#555\"\n              })\n            })]\n          }), isLoading ? _jsx(View, {\n            style: {\n              alignSelf: 'center',\n              marginTop: 20\n            },\n            children: _jsx(ActivityIndicator, {\n              size: \"large\",\n              color: \"#43C651\"\n            })\n          }) : _jsx(MessageCard, {})]\n        })\n      })]\n    })\n  });\n};\nvar MessageCard = function MessageCard() {\n  return _jsxs(TouchableOpacity, {\n    style: {\n      width: 100,\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: 2\n    },\n    children: [_jsx(View, {\n      style: {\n        width: 60,\n        height: 60,\n        borderRadius: 5,\n        marginTop: 10,\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 50,\n        borderWidth: 3,\n        borderColor: 'green'\n      },\n      children: _jsx(FontAwesome, {\n        name: \"users\",\n        size: 24,\n        color: \"#555\"\n      })\n    }), _jsxs(View, {\n      style: {\n        flex: 1\n      },\n      children: [_jsx(Text, {\n        style: {\n          flexDirection: 'row',\n          flex: 1\n        },\n        children: \"Messages Title\"\n      }), _jsx(Text, {})]\n    })]\n  });\n};\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","ActivityIndicator","Image","ScrollView","Text","TouchableOpacity","View","useSelector","FontAwesome","Ionicons","logo","SafeAreaView","jsx","_jsx","jsxs","_jsxs","HomeScreen","user","state","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","console","log","children","style","flexDirection","alignItems","source","height","width","marginTop","marginLeft","resizeMode","accessibilityLabel","onPress","uri","profilePic","borderRadius","borderWidth","borderColor","fontWeight","fontSize","name","size","color","alignSelf","MessageCard","justifyContent","padding","flex"],"sources":["C:/Users/786/Desktop/Chat-App/my-app/src/Screen/HomeScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { ActivityIndicator, Image, ScrollView, Text, TouchableOpacity, View } from \"react-native\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FontAwesome, Ionicons } from \"@expo/vector-icons\";\r\nimport logo from '../../assets/logo.png';\r\nimport { SafeAreaView } from \"react-native\";\r\n\r\nconst HomeScreen = () => {\r\n    const user = useSelector((state) => state.user);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    console.log(\"logged user:\", user);\r\n    \r\n    return (\r\n        <View>\r\n            <SafeAreaView>\r\n                <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                    <Image \r\n                        source={logo} \r\n                        style={{ height: 50, width: 70, marginTop: 40, marginLeft: 20 }} \r\n                        resizeMode=\"contain\"\r\n                        accessibilityLabel=\"Logo\" \r\n                    />\r\n                    <TouchableOpacity style={{ marginLeft: 20 }} onPress={() => console.log('Profile picture pressed')}>\r\n                        <Image \r\n                            source={{ uri: user.profilePic }} \r\n                            resizeMode=\"cover\"  \r\n                            style={{ marginLeft: 160, marginTop: 30, width: 50, height: 50, borderRadius: 25, borderWidth: 3, borderColor: '#77AB59' }} \r\n                        />\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <ScrollView>\r\n                    <View>\r\n                        <View style={{ flexDirection: 'row', alignItems: 'center', marginTop: 20, marginLeft: 20 }}>\r\n                            <Text style={{ fontWeight: \"bold\", fontSize: 20 }}>Messages</Text>\r\n                            <TouchableOpacity style={{ marginLeft: 170 }}>\r\n                                <Ionicons name=\"chatbox\" size={28} color=\"#555\" />\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                        {/* Conditional rendering of loading indicator */}\r\n                        {isLoading ? (\r\n                            <View style={{ alignSelf: 'center', marginTop: 20 }}>\r\n                                <ActivityIndicator size=\"large\" color=\"#43C651\" />\r\n                            </View>\r\n                        ) : (\r\n                            <MessageCard />\r\n                        )}\r\n                    </View>\r\n                </ScrollView>\r\n            </SafeAreaView>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst MessageCard = () => {\r\n    return (\r\n        <TouchableOpacity style={{ width: 100, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', padding: 2 }}>\r\n            {/*image of user */}\r\n            <View style={{width:60,height:60,borderRadius:5,marginTop:10,alignItems:'center',justifyContent:'center',borderRadius: 50, \r\n                                borderWidth: 3, \r\n                                borderColor: 'green',}}> \r\n                                <FontAwesome name=\"users\" size={24} color=\"#555\"/>\r\n            </View>\r\n                                {/* content */}\r\n                                <View style={{flex:1}}>\r\n                                    <Text style={{flexDirection:'row',flex:1}}>\r\n                                          Messages Title          \r\n                                    </Text>\r\n                                    <Text></Text>\r\n                                </View>\r\n        </TouchableOpacity>\r\n    );\r\n};\r\n\r\nexport default HomeScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,iBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAExC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,EAAEC,QAAQ,QAAQ,oBAAoB;AAC1D,OAAOC,IAAI;AAA8B,OAAAC,YAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGzC,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACrB,IAAMC,IAAI,GAAGV,WAAW,CAAC,UAACW,KAAK;IAAA,OAAKA,KAAK,CAACD,IAAI;EAAA,EAAC;EAC/C,IAAAE,SAAA,GAAkCnB,QAAQ,CAAC,KAAK,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9BI,OAAO,CAACC,GAAG,CAAC,cAAc,EAAER,IAAI,CAAC;EAEjC,OACIJ,IAAA,CAACP,IAAI;IAAAoB,QAAA,EACDX,KAAA,CAACJ,YAAY;MAAAe,QAAA,GACTX,KAAA,CAACT,IAAI;QAACqB,KAAK,EAAE;UAAEC,aAAa,EAAE,KAAK;UAAEC,UAAU,EAAE;QAAS,CAAE;QAAAH,QAAA,GACxDb,IAAA,CAACX,KAAK;UACF4B,MAAM,EAAEpB,IAAK;UACbiB,KAAK,EAAE;YAAEI,MAAM,EAAE,EAAE;YAAEC,KAAK,EAAE,EAAE;YAAEC,SAAS,EAAE,EAAE;YAAEC,UAAU,EAAE;UAAG,CAAE;UAChEC,UAAU,EAAC,SAAS;UACpBC,kBAAkB,EAAC;QAAM,CAC5B,CAAC,EACFvB,IAAA,CAACR,gBAAgB;UAACsB,KAAK,EAAE;YAAEO,UAAU,EAAE;UAAG,CAAE;UAACG,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMb,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;UAAA,CAAC;UAAAC,QAAA,EAC/Fb,IAAA,CAACX,KAAK;YACF4B,MAAM,EAAE;cAAEQ,GAAG,EAAErB,IAAI,CAACsB;YAAW,CAAE;YACjCJ,UAAU,EAAC,OAAO;YAClBR,KAAK,EAAE;cAAEO,UAAU,EAAE,GAAG;cAAED,SAAS,EAAE,EAAE;cAAED,KAAK,EAAE,EAAE;cAAED,MAAM,EAAE,EAAE;cAAES,YAAY,EAAE,EAAE;cAAEC,WAAW,EAAE,CAAC;cAAEC,WAAW,EAAE;YAAU;UAAE,CAC9H;QAAC,CACY,CAAC;MAAA,CACjB,CAAC,EACP7B,IAAA,CAACV,UAAU;QAAAuB,QAAA,EACPX,KAAA,CAACT,IAAI;UAAAoB,QAAA,GACDX,KAAA,CAACT,IAAI;YAACqB,KAAK,EAAE;cAAEC,aAAa,EAAE,KAAK;cAAEC,UAAU,EAAE,QAAQ;cAAEI,SAAS,EAAE,EAAE;cAAEC,UAAU,EAAE;YAAG,CAAE;YAAAR,QAAA,GACvFb,IAAA,CAACT,IAAI;cAACuB,KAAK,EAAE;gBAAEgB,UAAU,EAAE,MAAM;gBAAEC,QAAQ,EAAE;cAAG,CAAE;cAAAlB,QAAA,EAAC;YAAQ,CAAM,CAAC,EAClEb,IAAA,CAACR,gBAAgB;cAACsB,KAAK,EAAE;gBAAEO,UAAU,EAAE;cAAI,CAAE;cAAAR,QAAA,EACzCb,IAAA,CAACJ,QAAQ;gBAACoC,IAAI,EAAC,SAAS;gBAACC,IAAI,EAAE,EAAG;gBAACC,KAAK,EAAC;cAAM,CAAE;YAAC,CACpC,CAAC;UAAA,CACjB,CAAC,EAENzB,SAAS,GACNT,IAAA,CAACP,IAAI;YAACqB,KAAK,EAAE;cAAEqB,SAAS,EAAE,QAAQ;cAAEf,SAAS,EAAE;YAAG,CAAE;YAAAP,QAAA,EAChDb,IAAA,CAACZ,iBAAiB;cAAC6C,IAAI,EAAC,OAAO;cAACC,KAAK,EAAC;YAAS,CAAE;UAAC,CAChD,CAAC,GAEPlC,IAAA,CAACoC,WAAW,IAAE,CACjB;QAAA,CACC;MAAC,CACC,CAAC;IAAA,CACH;EAAC,CACb,CAAC;AAEf,CAAC;AAED,IAAMA,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EACtB,OACIlC,KAAA,CAACV,gBAAgB;IAACsB,KAAK,EAAE;MAAEK,KAAK,EAAE,GAAG;MAAEJ,aAAa,EAAE,KAAK;MAAEC,UAAU,EAAE,QAAQ;MAAEqB,cAAc,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAE,CAAE;IAAAzB,QAAA,GAEtHb,IAAA,CAACP,IAAI;MAACqB,KAAK,EAAE;QAACK,KAAK,EAAC,EAAE;QAACD,MAAM,EAAC,EAAE;QAACS,YAAY,EAAC,CAAC;QAACP,SAAS,EAAC,EAAE;QAACJ,UAAU,EAAC,QAAQ;QAACqB,cAAc,EAAC,QAAQ;QAACV,YAAY,EAAE,EAAE;QACrGC,WAAW,EAAE,CAAC;QACdC,WAAW,EAAE;MAAQ,CAAE;MAAAhB,QAAA,EACvBb,IAAA,CAACL,WAAW;QAACqC,IAAI,EAAC,OAAO;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAM,CAAC;IAAC,CAChE,CAAC,EAEahC,KAAA,CAACT,IAAI;MAACqB,KAAK,EAAE;QAACyB,IAAI,EAAC;MAAC,CAAE;MAAA1B,QAAA,GAClBb,IAAA,CAACT,IAAI;QAACuB,KAAK,EAAE;UAACC,aAAa,EAAC,KAAK;UAACwB,IAAI,EAAC;QAAC,CAAE;QAAA1B,QAAA,EAAC;MAE3C,CAAM,CAAC,EACPb,IAAA,CAACT,IAAI,IAAO,CAAC;IAAA,CACX,CAAC;EAAA,CACb,CAAC;AAE3B,CAAC;AAED,eAAeY,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}