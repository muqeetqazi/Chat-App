{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useSelector } from \"react-redux\";\nimport Input from \"../componets/Input\";\nimport { FontAwesome, Ionicons, MaterialIcons } from '@expo/vector-icons';\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { firebaseAuth, firestoreDB } from \"../config/firebase\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddToChatScreen = function AddToChatScreen(props) {\n  var navigation = useNavigation();\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    addChat = _useState2[0],\n    setAddChat = _useState2[1];\n  var createNewChat = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var id = `${Date.now()}`;\n      var _doc = {\n        _id: id,\n        user: user,\n        ChatName: addChat\n      };\n      if (addChat != \"\") {\n        setDoc(doc(firestoreDB, \"chats\", id), _doc).then(function () {\n          setAddChat(\"\");\n          navigation.replace(\"HomeScreen\");\n        }).catch(function (err) {\n          console.log(\"Error:\".err);\n        });\n      }\n    });\n    return function createNewChat() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: {\n        top: 40,\n        left: 10\n      },\n      onPress: function onPress() {\n        return props.navigation.goBack();\n      },\n      children: _jsx(MaterialIcons, {\n        name: \"chevron-left\",\n        size: 32,\n        color: 'white'\n      })\n    }), _jsx(TouchableOpacity, {\n      style: {\n        position: 'absolute',\n        right: 20,\n        top: 35\n      },\n      onPress: function onPress() {\n        return console.log('Profile picture pressed');\n      },\n      children: _jsx(Image, {\n        source: {\n          uri: user.profilePic\n        },\n        resizeMode: \"cover\",\n        style: {\n          width: 50,\n          height: 50,\n          borderRadius: 25,\n          borderWidth: 3,\n          borderColor: '#77AB59'\n        }\n      })\n    }), _jsxs(View, {\n      style: styles.maincomponent,\n      children: [_jsxs(View, {\n        style: {\n          width: '80%',\n          height: 50,\n          borderWidth: 1,\n          borderColor: 'gray',\n          borderRadius: 15,\n          alignSelf: 'center',\n          flexDirection: 'row',\n          alignItems: 'center',\n          marginTop: 50,\n          backgroundColor: '#FFFFFF',\n          paddingHorizontal: 10\n        },\n        children: [_jsx(Ionicons, {\n          name: \"chatbubbles\",\n          size: 24,\n          color: \"#777\",\n          style: {\n            marginRight: 10\n          }\n        }), _jsx(TextInput, {\n          style: {\n            flex: 1\n          },\n          placeholder: \"Create a new chat\",\n          value: addChat,\n          onChangeText: function onChangeText(text) {\n            return setAddChat(text);\n          }\n        }), _jsx(TouchableOpacity, {\n          onPress: createNewChat,\n          children: _jsx(FontAwesome, {\n            name: \"send\",\n            size: 24,\n            color: '#777'\n          })\n        })]\n      }), _jsx(View, {\n        style: styles.loginContainer\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#36802d'\n  },\n  maincomponent: {\n    borderTopLeftRadius: 60,\n    borderTopRightRadius: 60,\n    backgroundColor: '#FAF9F6',\n    marginTop: '30%',\n    flex: 1\n  },\n  logo: {\n    alignSelf: 'center',\n    height: '5%'\n  },\n  title: {\n    fontSize: 20,\n    color: 'black',\n    alignSelf: 'center'\n  },\n  backgroundImage: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    height: '30%'\n  },\n  avatarImage: {\n    width: 50,\n    height: 50\n  },\n  loginContainer: {\n    flexDirection: 'row',\n    marginTop: 30,\n    marginLeft: '25%',\n    fontSize: 15\n  },\n  loginText: {\n    color: 'black'\n  },\n  loginLink: {\n    color: '#36802D'\n  }\n});\nexport default AddToChatScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","Image","TouchableOpacity","useSelector","Input","FontAwesome","Ionicons","MaterialIcons","doc","setDoc","firebaseAuth","firestoreDB","TextInput","useNavigation","jsx","_jsx","jsxs","_jsxs","AddToChatScreen","props","navigation","user","state","_useState","_useState2","_slicedToArray","addChat","setAddChat","createNewChat","_ref","_asyncToGenerator","id","Date","now","_doc","_id","ChatName","then","replace","catch","err","console","log","apply","arguments","style","styles","container","children","top","left","onPress","goBack","name","size","color","position","right","source","uri","profilePic","resizeMode","width","height","borderRadius","borderWidth","borderColor","maincomponent","alignSelf","flexDirection","alignItems","marginTop","backgroundColor","paddingHorizontal","marginRight","flex","placeholder","value","onChangeText","text","loginContainer","create","borderTopLeftRadius","borderTopRightRadius","logo","title","fontSize","backgroundImage","avatarImage","marginLeft","loginText","loginLink"],"sources":["C:/Users/786/Desktop/Chat-App/my-app/src/Screen/AddToChatScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, Image, TouchableOpacity } from 'react-native';\r\nimport { useSelector } from \"react-redux\";\r\nimport Input from '../componets/Input';\r\nimport { FontAwesome, Ionicons, MaterialIcons } from '@expo/vector-icons';\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nimport { firebaseAuth, firestoreDB } from \"../config/firebase\";\r\n\r\nimport { TextInput } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nconst AddToChatScreen = (props) => {\r\n  const navigation=useNavigation();\r\n    const user = useSelector((state) => state.user);\r\n    const[addChat,setAddChat]=useState(\"\")\r\n    const createNewChat = async () => {\r\n      let id = `${Date.now()}`;\r\n\r\n      // Use the unique ID (timestamp) to create a new chat\r\n      const _doc={\r\n        _id:id,\r\n        user:user,\r\n        ChatName:addChat\r\n\r\n      }\r\n      if(addChat!=\"\")\r\n      {\r\n        setDoc(doc(firestoreDB,\"chats\",id),_doc).then(()=>{\r\n          setAddChat(\"\")\r\n          navigation.replace(\"HomeScreen\")\r\n        }).catch((err)=>{\r\n          console.log(\"Error:\".err);\r\n        })\r\n      }\r\n    }\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n        <TouchableOpacity style={{top:40,left:10}} onPress={() => props.navigation.goBack()}>\r\n                        <MaterialIcons name=\"chevron-left\" size={32} color={'white'} />\r\n                    </TouchableOpacity>\r\n         <TouchableOpacity style={{ position: 'absolute', right: 20, top: 35 }} onPress={() => console.log('Profile picture pressed')}>\r\n    <Image \r\n        source={{ uri: user.profilePic }} \r\n        resizeMode=\"cover\"  \r\n        style={{ width: 50, height: 50, borderRadius: 25, borderWidth: 3, borderColor: '#77AB59' }} \r\n    />\r\n</TouchableOpacity>\r\n      <View style={styles.maincomponent}>\r\n        \r\n      <View style={{ \r\n      width: '80%',\r\n      height: 50,\r\n      borderWidth: 1,\r\n      borderColor: 'gray',\r\n      borderRadius: 15,\r\n      alignSelf: 'center',\r\n      flexDirection: 'row', // Use flexDirection: 'row' to align items horizontally\r\n      alignItems: 'center', // Align items vertically in the center\r\n      marginTop: 50,\r\n      backgroundColor: '#FFFFFF',\r\n      paddingHorizontal: 10, // Add padding to the container\r\n    }}>\r\n      <Ionicons name=\"chatbubbles\" size={24} color={\"#777\"} style={{ marginRight: 10 }} />\r\n      <TextInput \r\n        style={{ flex: 1 }} // Take up remaining space\r\n        placeholder='Create a new chat' \r\n        value={addChat}\r\n        onChangeText={(text)=>setAddChat(text)}\r\n      />\r\n      <TouchableOpacity onPress={createNewChat}>\r\n        <FontAwesome name=\"send\" size={24} color={'#777'} />\r\n      </TouchableOpacity>\r\n    </View>\r\n         <View style={styles.loginContainer}>\r\n         \r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#36802d',\r\n  },\r\n  maincomponent: {\r\n    borderTopLeftRadius: 60,\r\n    borderTopRightRadius:60,\r\n    backgroundColor: '#FAF9F6',\r\n    marginTop: '30%',\r\n    flex:1\r\n  },\r\n  logo: {\r\n    alignSelf: 'center',\r\n    height: '5%'\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    color: 'black',\r\n    alignSelf: 'center',\r\n  },\r\n  backgroundImage: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    height: '30%'\r\n  },\r\n  avatarImage: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  loginContainer: {\r\n    flexDirection: 'row',\r\n    marginTop: 30,\r\n    marginLeft: '25%',\r\n    fontSize: 15,\r\n  },\r\n  loginText: {\r\n    color: 'black',\r\n  },\r\n  loginLink: {\r\n    color: '#36802D',\r\n  }\r\n});\r\n\r\nexport default AddToChatScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}