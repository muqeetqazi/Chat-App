{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from 'react';\nimport Input from \"../componets/Input\";\nimport Buttons from \"../componets/Buttons\";\nimport firebase from '@react-native-firebase/firestore';\nimport uuid from 'react-native-uuid';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login(props) {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var registerUser = function registerUser() {\n    var userId = uuid.v4();\n    firebase().collection(\"user\").doc(userId).set({\n      email: email,\n      password: password,\n      userId: userId\n    }).then(function (res) {\n      console.log(\"user created\");\n    }).catch(function (error) {\n      console.log(\"error\");\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Login\"\n    }), _jsx(Input, {\n      placeholder: \"Enter email\",\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(Input, {\n      placeholder: \"enter password\",\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), _jsx(Buttons, {\n      title: \"Log in\"\n    }), _jsxs(View, {\n      style: styles.loginContainer,\n      children: [_jsx(Text, {\n        style: styles.loginText,\n        children: \"Does not have an account?\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate('Signup');\n        },\n        children: _jsx(Text, {\n          style: styles.loginLink,\n          children: \" Signup\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  title: {\n    fontSize: 30,\n    color: 'black',\n    alignSelf: 'center',\n    marginTop: 80,\n    marginBottom: 50\n  },\n  loginContainer: {\n    flexDirection: 'row',\n    marginTop: 30,\n    marginLeft: '25%',\n    fontSize: 15\n  },\n  loginText: {\n    color: 'black'\n  },\n  loginLink: {\n    color: '#1B9CA9'\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","useState","Input","Buttons","firebase","uuid","jsx","_jsx","jsxs","_jsxs","Login","props","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","registerUser","userId","v4","collection","doc","set","then","res","console","log","catch","error","View","style","styles","container","children","Text","title","placeholder","value","onChangeText","text","loginContainer","loginText","TouchableOpacity","onPress","navigation","navigate","loginLink","StyleSheet","create","flex","backgroundColor","fontSize","color","alignSelf","marginTop","marginBottom","flexDirection","marginLeft"],"sources":["C:/Users/786/Desktop/Chat-App/my-app/src/Screen/Login.js"],"sourcesContent":["import { View, Text,StyleSheet,TextInput,TouchableOpacity } from 'react-native'\r\nimport React, { useState } from 'react'\r\nimport Input from '../componets/Input'\r\nimport Buttons from '../componets/Buttons';\r\nimport firebase from '@react-native-firebase/firestore'\r\nimport uuid from 'react-native-uuid';\r\nconst Login = (props) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n   const registerUser=()=>{\r\n    const userId=uuid.v4()\r\nfirebase().collection(\"user\").doc(userId).set({\r\n    email:email,\r\n    password:password,\r\n    userId:userId,\r\n}).then(res=>\r\n{\r\n    console.log(\"user created\");\r\n}).catch(error=>{\r\n    console.log(\"error\");\r\n});\r\n   }\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Login</Text>\r\n       <Input  placeholder='Enter email'\r\n       value={email}\r\n       onChangeText={(text)=>setEmail(text)}/> \r\n       <Input placeholder='enter password' value={password} onChangeText={(text)=>setPassword(text)}/>\r\n       <Buttons title='Log in' />\r\n       <View style={styles.loginContainer}>\r\n                <Text style={styles.loginText}>Does not have an account?</Text>\r\n                <TouchableOpacity onPress={() => props.navigation.navigate('Signup')}>\r\n                    <Text style={styles.loginLink}> Signup</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n    </View>\r\n\r\n  )\r\n}\r\nconst styles=StyleSheet.create(\r\n    {\r\n        container:{\r\n            flex:1,\r\n            backgroundColor:'white'\r\n        },\r\n        title: {\r\n            fontSize: 30,\r\n            color: 'black',\r\n            alignSelf: 'center',\r\n            marginTop: 80,\r\n            marginBottom: 50\r\n    }, loginContainer: {\r\n        flexDirection: 'row',\r\n        marginTop: 30,\r\n        marginLeft: '25%',\r\n        fontSize: 15,\r\n    },\r\n    loginText: {\r\n        color: 'black',\r\n    },\r\n    loginLink: {\r\n        color: '#1B9CA9',\r\n    }\r\n}\r\n)\r\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}