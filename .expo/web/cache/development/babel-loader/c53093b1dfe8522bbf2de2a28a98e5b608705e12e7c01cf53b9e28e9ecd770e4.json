{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useLayoutEffect, useState, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { FontAwesome5, Entypo, MaterialIcons, Ionicons } from \"@expo/vector-icons\";\nimport { useSelector } from \"react-redux\";\nimport EmojiSelector from 'react-native-emoji-selector';\nimport { doc, setDoc, addDoc, collection, query, orderBy, onSnapshot } from \"firebase/firestore\";\nimport { serverTimestamp } from \"firebase/firestore\";\nimport { firestoreDB } from \"../config/firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatScreen = function ChatScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputMessage = _useState2[0],\n    setInputMessage = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    messages = _useState4[0],\n    setMessages = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showEmojiPicker = _useState8[0],\n    setShowEmojiPicker = _useState8[1];\n  var room = route.params.room;\n  var scrollViewRef = useRef();\n  var sendMessage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var timeStamp = serverTimestamp();\n      var id = `${Date.now()}`;\n      var _doc = {\n        _id: id,\n        roomId: room._id,\n        timeStamp: timeStamp,\n        message: inputMessage,\n        user: user\n      };\n      setInputMessage(\"\");\n      try {\n        yield addDoc(collection(doc(firestoreDB, \"chats\", room._id), \"messages\"), _doc);\n      } catch (error) {\n        console.error(\"Error sending message:\", error);\n        alert(\"Error sending message. Please try again.\");\n      }\n    });\n    return function sendMessage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useLayoutEffect(function () {\n    var msgQuery = query(collection(firestoreDB, \"chats\", room == null ? void 0 : room._id, \"messages\"), orderBy(\"timeStamp\", \"asc\"));\n    var unsubcribe = onSnapshot(msgQuery, function (querySnap) {\n      var upMsg = querySnap.docs.map(function (doc) {\n        return doc.data();\n      });\n      setMessages(upMsg);\n      setIsLoading(false);\n      if (scrollViewRef.current) {\n        scrollViewRef.current.scrollToEnd({\n          animated: true\n        });\n      }\n    });\n    return unsubcribe;\n  }, []);\n  var handleEmojiSelected = function handleEmojiSelected(emoji) {\n    setMessages(messages + emoji);\n  };\n  var toggleEmojiPicker = function toggleEmojiPicker() {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.backButton,\n      onPress: console.log(\"working fine\"),\n      children: _jsx(MaterialIcons, {\n        name: \"chevron-left\",\n        size: 32,\n        color: 'white'\n      })\n    }), _jsxs(View, {\n      style: styles.middleContainer,\n      children: [_jsx(View, {\n        style: styles.userIcon,\n        children: _jsx(FontAwesome5, {\n          name: \"users\",\n          size: 24,\n          color: \"#fbfbfb\"\n        })\n      }), _jsxs(View, {\n        style: styles.userInfo,\n        children: [_jsx(Text, {\n          style: styles.userName,\n          children: room.ChatName.length > 13 ? `${room.ChatName.slice(0, 12)}..` : room.ChatName\n        }), _jsx(Text, {\n          style: styles.userStatus,\n          children: \"Online\"\n        })]\n      }), _jsxs(View, {\n        style: styles.iconRow,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.iconButton,\n          children: _jsx(FontAwesome5, {\n            name: \"video\",\n            size: 18,\n            color: \"#fbfbfb\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.iconButton,\n          children: _jsx(FontAwesome5, {\n            name: \"phone\",\n            size: 18,\n            color: \"#fbfbfb\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.iconButton,\n          children: _jsx(Entypo, {\n            name: \"dots-three-vertical\",\n            size: 18,\n            color: \"#fbfbfb\"\n          })\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.maincomponent,\n      children: _jsx(View, {\n        children: _jsx(KeyboardAvoidingView, {\n          behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n          keyboardVerticalOffset: 160,\n          children: _jsx(ScrollView, {\n            style: {\n              marginTop: 40\n            },\n            ref: scrollViewRef,\n            onContentSizeChange: function onContentSizeChange() {\n              return scrollViewRef.current.scrollToEnd({\n                animated: true\n              });\n            },\n            children: isLoading ? _jsx(View, {\n              style: {\n                justifyContent: 'center',\n                alignItems: 'center'\n              },\n              children: _jsx(ActivityIndicator, {\n                size: \"large\",\n                color: \"#43C651\"\n              })\n            }) : messages == null ? void 0 : messages.map(function (msg, i) {\n              var _msg$timeStamp, _msg$timeStamp2, _msg$user, _msg$timeStamp3, _msg$timeStamp4;\n              return msg.user.providerData.email === user.providerData.email ? _jsxs(View, {\n                style: {\n                  alignSelf: 'flex-end',\n                  padding: 8,\n                  paddingLeft: 16,\n                  paddingRight: 16,\n                  borderRadius: 5,\n                  margin: 10,\n                  borderTopRightRadius: 22,\n                  borderBottomLeftRadius: 22,\n                  backgroundColor: 'green',\n                  maxWidth: '80%',\n                  position: 'relative'\n                },\n                children: [_jsx(Text, {\n                  children: msg.message\n                }), _jsx(View, {\n                  style: {\n                    alignSelf: 'flex-end',\n                    marginTop: 4\n                  },\n                  children: (msg == null ? void 0 : (_msg$timeStamp = msg.timeStamp) == null ? void 0 : _msg$timeStamp.seconds) && _jsx(Text, {\n                    style: styles.timestampText,\n                    children: new Date(parseInt(msg == null ? void 0 : (_msg$timeStamp2 = msg.timeStamp) == null ? void 0 : _msg$timeStamp2.seconds) * 1000).toLocaleTimeString('en-US', {\n                      hour: 'numeric',\n                      minute: 'numeric',\n                      hour12: true\n                    })\n                  })\n                })]\n              }, `${msg._id}_${i}`) : _jsxs(View, {\n                style: {\n                  flexDirection: 'row',\n                  alignItems: 'flex-start',\n                  marginVertical: 5\n                },\n                children: [_jsx(Image, {\n                  source: {\n                    uri: msg == null ? void 0 : (_msg$user = msg.user) == null ? void 0 : _msg$user.profilePic\n                  },\n                  resizeMode: \"cover\",\n                  style: {\n                    margin: 5,\n                    width: 50,\n                    height: 50,\n                    borderRadius: 25,\n                    borderWidth: 3,\n                    borderColor: '#77AB59'\n                  }\n                }), _jsxs(View, {\n                  style: {\n                    alignSelf: 'flex-start',\n                    padding: 8,\n                    paddingLeft: 16,\n                    paddingRight: 16,\n                    borderRadius: 5,\n                    marginHorizontal: 5,\n                    borderTopRightRadius: 22,\n                    borderBottomLeftRadius: 22,\n                    backgroundColor: 'gray',\n                    maxWidth: '80%',\n                    position: 'relative'\n                  },\n                  children: [_jsx(Text, {\n                    children: msg.message\n                  }), _jsx(View, {\n                    style: {\n                      alignSelf: 'flex-start',\n                      marginTop: 4\n                    },\n                    children: (msg == null ? void 0 : (_msg$timeStamp3 = msg.timeStamp) == null ? void 0 : _msg$timeStamp3.seconds) && _jsx(Text, {\n                      style: styles.timestampText,\n                      children: new Date(parseInt(msg == null ? void 0 : (_msg$timeStamp4 = msg.timeStamp) == null ? void 0 : _msg$timeStamp4.seconds) * 1000).toLocaleTimeString('en-US', {\n                        hour: 'numeric',\n                        minute: 'numeric',\n                        hour12: true\n                      })\n                    })\n                  })]\n                })]\n              }, `${msg._id}_${i}`);\n            })\n          })\n        })\n      })\n    }), _jsx(View, {\n      children: _jsxs(View, {\n        style: styles.containers,\n        children: [_jsx(TouchableOpacity, {\n          style: {\n            marginRight: 5\n          },\n          onPress: toggleEmojiPicker,\n          children: _jsx(Entypo, {\n            name: \"emoji-happy\",\n            size: 24,\n            color: \"#555\"\n          })\n        }), showEmojiPicker && _jsx(EmojiSelector, {\n          onEmojiSelected: handleEmojiSelected,\n          columns: 8,\n          showSearchBar: false,\n          showSectionTitles: false,\n          showTabs: false\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Type your message...\",\n          value: inputMessage,\n          onChangeText: setInputMessage,\n          multiline: true\n        }), _jsx(TouchableOpacity, {\n          style: styles.sendButton,\n          onPress: sendMessage,\n          children: _jsx(Ionicons, {\n            name: \"send\",\n            size: 24,\n            color: \"white\"\n          })\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#36802d'\n  },\n  ownMessageContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    marginBottom: 10\n  },\n  senderMessageContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginBottom: 10\n  },\n  timestampText: {\n    color: 'white',\n    fontSize: 10\n  },\n  ownMessage: {\n    backgroundColor: 'lightblue',\n    padding: 10,\n    borderRadius: 10\n  },\n  senderMessage: {\n    backgroundColor: 'lightgreen',\n    padding: 10,\n    borderRadius: 10\n  },\n  ownMessageText: {\n    color: 'black'\n  },\n  senderMessageText: {\n    color: 'black'\n  },\n  containers: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#FAF9F6',\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderTopWidth: 1,\n    borderTopColor: '#FAF9F6'\n  },\n  input: {\n    flex: 1,\n    minHeight: 40,\n    maxHeight: 120,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    marginRight: 10,\n    borderWidth: 1,\n    borderColor: 'gray'\n  },\n  sendButton: {\n    backgroundColor: '#36802d',\n    borderRadius: 20,\n    padding: 10\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 10,\n    paddingBottom: 10\n  },\n  backButton: {\n    top: 50,\n    left: 10\n  },\n  middleContainer: {\n    flexDirection: 'row'\n  },\n  userIcon: {\n    borderRadius: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 50,\n    height: 50,\n    borderWidth: 1,\n    borderColor: 'white',\n    left: 40,\n    top: 10\n  },\n  userInfo: {\n    top: 10\n  },\n  userName: {\n    fontSize: 20,\n    left: 50\n  },\n  userStatus: {\n    fontSize: 10,\n    left: 50\n  },\n  iconRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 20,\n    marginTop: 10\n  },\n  iconButton: {\n    left: 80,\n    margin: 10\n  },\n  maincomponent: {\n    borderTopLeftRadius: 40,\n    borderTopRightRadius: 40,\n    backgroundColor: '#FAF9F6',\n    flex: 1,\n    marginTop: 25\n  }\n});\nexport default ChatScreen;","map":{"version":3,"names":["React","useLayoutEffect","useState","useRef","View","Text","StyleSheet","TouchableOpacity","KeyboardAvoidingView","TextInput","Platform","ScrollView","ActivityIndicator","Image","FontAwesome5","Entypo","MaterialIcons","Ionicons","useSelector","EmojiSelector","doc","setDoc","addDoc","collection","query","orderBy","onSnapshot","serverTimestamp","firestoreDB","jsx","_jsx","jsxs","_jsxs","ChatScreen","_ref","route","navigation","user","state","_useState","_useState2","_slicedToArray","inputMessage","setInputMessage","_useState3","_useState4","messages","setMessages","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","showEmojiPicker","setShowEmojiPicker","room","params","scrollViewRef","sendMessage","_ref2","_asyncToGenerator","timeStamp","id","Date","now","_doc","_id","roomId","message","error","console","alert","apply","arguments","msgQuery","unsubcribe","querySnap","upMsg","docs","map","data","current","scrollToEnd","animated","handleEmojiSelected","emoji","toggleEmojiPicker","style","styles","container","children","backButton","onPress","log","name","size","color","middleContainer","userIcon","userInfo","userName","ChatName","length","slice","userStatus","iconRow","iconButton","maincomponent","behavior","OS","keyboardVerticalOffset","marginTop","ref","onContentSizeChange","justifyContent","alignItems","msg","i","_msg$timeStamp","_msg$timeStamp2","_msg$user","_msg$timeStamp3","_msg$timeStamp4","providerData","email","alignSelf","padding","paddingLeft","paddingRight","borderRadius","margin","borderTopRightRadius","borderBottomLeftRadius","backgroundColor","maxWidth","position","seconds","timestampText","parseInt","toLocaleTimeString","hour","minute","hour12","flexDirection","marginVertical","source","uri","profilePic","resizeMode","width","height","borderWidth","borderColor","marginHorizontal","containers","marginRight","onEmojiSelected","columns","showSearchBar","showSectionTitles","showTabs","input","placeholder","value","onChangeText","multiline","sendButton","create","flex","ownMessageContainer","marginBottom","senderMessageContainer","fontSize","ownMessage","senderMessage","ownMessageText","senderMessageText","paddingHorizontal","paddingVertical","borderTopWidth","borderTopColor","minHeight","maxHeight","inputContainer","paddingBottom","top","left","borderTopLeftRadius"],"sources":["C:/Users/786/Desktop/Chat-App/my-app/src/Screen/ChatScreen.js"],"sourcesContent":["import React, { useLayoutEffect, useState, useRef } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity, KeyboardAvoidingView, TextInput, Platform, ScrollView, ActivityIndicator, Image } from \"react-native\";\r\nimport { FontAwesome5, Entypo, MaterialIcons, Ionicons } from \"@expo/vector-icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport EmojiSelector from 'react-native-emoji-selector';\r\nimport { doc, setDoc, addDoc, collection, query, orderBy, onSnapshot } from \"firebase/firestore\";\r\nimport { serverTimestamp } from \"firebase/firestore\";\r\n\r\nimport { firestoreDB } from \"../config/firebase\";\r\nconst ChatScreen = ({ route, navigation }) => {\r\n    const user = useSelector((state) => state.user);\r\n    const [inputMessage, setInputMessage] = useState(''); // State for input message\r\n    const [messages, setMessages] = useState([]); // State for messages from Firestore\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n    const { room } = route.params;\r\n\r\n    const scrollViewRef = useRef();\r\n\r\n    const sendMessage = async () => {\r\n        const timeStamp = serverTimestamp();\r\n        const id = `${Date.now()}`;\r\n        const _doc = {\r\n            _id: id,\r\n            roomId: room._id,\r\n            timeStamp: timeStamp,\r\n            message: inputMessage, // Use inputMessage instead of message\r\n            user: user\r\n        };\r\n        setInputMessage(\"\"); // Clear the input message after sending\r\n        try {\r\n            await addDoc(collection(doc(firestoreDB, \"chats\", room._id), \"messages\"), _doc);\r\n        } catch (error) {\r\n            console.error(\"Error sending message:\", error);\r\n            alert(\"Error sending message. Please try again.\");\r\n        }\r\n    };\r\n    \r\n    \r\n    useLayoutEffect(()=>{\r\n        const msgQuery=query(\r\n            collection(firestoreDB,\"chats\",room?._id,\"messages\"),\r\n            orderBy(\"timeStamp\",\"asc\")\r\n        )\r\n        const unsubcribe=onSnapshot(msgQuery,(querySnap)=>{\r\n            const upMsg=querySnap.docs.map(doc=>doc.data())\r\n            setMessages(upMsg)\r\n            setIsLoading(false)\r\n            // Scroll to the bottom when new messages are loaded\r\n            if (scrollViewRef.current) {\r\n                scrollViewRef.current.scrollToEnd({ animated: true });\r\n            }\r\n        })\r\n        return unsubcribe\r\n    },[])\r\n\r\n    const handleEmojiSelected = (emoji) => {\r\n        setMessages(messages + emoji);\r\n    };\r\n\r\n    const toggleEmojiPicker = () => {\r\n        setShowEmojiPicker(!showEmojiPicker);\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <TouchableOpacity style={styles.backButton} onPress={console.log(\"working fine\")}>\r\n                <MaterialIcons name=\"chevron-left\" size={32} color={'white'} />\r\n            </TouchableOpacity>\r\n            {/* Middle */}\r\n            <View style={styles.middleContainer}>\r\n                <View style={styles.userIcon}>\r\n                    <FontAwesome5 name=\"users\" size={24} color=\"#fbfbfb\" />\r\n                </View>\r\n                <View style={styles.userInfo}>\r\n                    <Text style={styles.userName}>{room.ChatName.length > 13 ? `${room.ChatName.slice(0, 12)}..` : room.ChatName}</Text>\r\n                    <Text style={styles.userStatus}>Online</Text>\r\n                </View>\r\n                <View style={styles.iconRow}>\r\n                    <TouchableOpacity style={styles.iconButton}>\r\n                        <FontAwesome5 name=\"video\" size={18} color=\"#fbfbfb\" />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.iconButton}>\r\n                        <FontAwesome5 name=\"phone\" size={18} color=\"#fbfbfb\" />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.iconButton}>\r\n                        <Entypo name=\"dots-three-vertical\" size={18} color=\"#fbfbfb\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n            <View style={styles.maincomponent}>\r\n                <View>\r\n                    <KeyboardAvoidingView behavior={Platform.OS==='ios'?'padding':'height'} keyboardVerticalOffset={160}>\r\n                        <ScrollView\r\n                            style={{ marginTop: 40 }}\r\n                            ref={scrollViewRef}\r\n                            onContentSizeChange={() => scrollViewRef.current.scrollToEnd({ animated: true })}\r\n                        >\r\n                            {isLoading ? (\r\n                                <View style={{ justifyContent: 'center', alignItems: 'center' }}>\r\n                                    <ActivityIndicator size=\"large\" color=\"#43C651\" />\r\n                                </View>\r\n                            ) : (\r\n                                messages?.map((msg, i) =>\r\n                                    msg.user.providerData.email === user.providerData.email ? (\r\n                                        <View\r\n                                            style={{\r\n                                                alignSelf: 'flex-end',\r\n                                                padding: 8,\r\n                                                paddingLeft: 16,\r\n                                                paddingRight: 16,\r\n                                                borderRadius: 5,\r\n                                                margin: 10,\r\n                                                borderTopRightRadius: 22,\r\n                                                borderBottomLeftRadius: 22,\r\n                                                backgroundColor: 'green',\r\n                                                maxWidth: '80%', // Limit message width\r\n                                                position: 'relative',\r\n                                            }}\r\n                                            key={`${msg._id}_${i}`} // Use unique key combining _id and index\r\n                                        >\r\n                                            <Text>{msg.message}</Text>\r\n                                            <View style={{ alignSelf: 'flex-end', marginTop: 4 }}>\r\n                                                {msg?.timeStamp?.seconds && (\r\n                                                    <Text style={styles.timestampText}>\r\n                                                        {new Date(parseInt(msg?.timeStamp?.seconds) * 1000).toLocaleTimeString('en-US', {\r\n                                                            hour: 'numeric',\r\n                                                            minute: 'numeric',\r\n                                                            hour12: true,\r\n                                                        })}\r\n                                                    </Text>\r\n                                                )}\r\n                                            </View>\r\n                                        </View>\r\n                                    ) : (\r\n                                        <View\r\n                                            key={`${msg._id}_${i}`}\r\n                                            style={{\r\n                                                flexDirection: 'row',\r\n                                                alignItems: 'flex-start', // Align items to the start to prevent overlapping\r\n                                                marginVertical: 5,\r\n                                            }}\r\n                                        >\r\n                                            <Image\r\n                                                source={{ uri: msg?.user?.profilePic }}\r\n                                                resizeMode=\"cover\"\r\n                                                style={{ margin:5,width: 50, height: 50, borderRadius: 25, borderWidth: 3, borderColor: '#77AB59' }}\r\n                                            />\r\n                                            <View\r\n                                                style={{\r\n                                                    alignSelf: 'flex-start',\r\n                                                    padding: 8,\r\n                                                    paddingLeft: 16,\r\n                                                    paddingRight: 16,\r\n                                                    borderRadius: 5,\r\n                                                    marginHorizontal: 5,\r\n                                                    borderTopRightRadius: 22,\r\n                                                    borderBottomLeftRadius: 22,\r\n                                                    backgroundColor: 'gray',\r\n                                                    maxWidth: '80%', // Limit message width\r\n                                                    position: 'relative',\r\n                                                }}\r\n                                            >\r\n                                                <Text>{msg.message}</Text>\r\n                                                <View style={{ alignSelf: 'flex-start', marginTop: 4 }}>\r\n                                                    {msg?.timeStamp?.seconds && (\r\n                                                        <Text style={styles.timestampText}>\r\n                                                            {new Date(parseInt(msg?.timeStamp?.seconds) * 1000).toLocaleTimeString('en-US', {\r\n                                                                hour: 'numeric',\r\n                                                                minute: 'numeric',\r\n                                                                hour12: true,\r\n                                                            })}\r\n                                                        </Text>\r\n                                                    )}\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    )\r\n                                )\r\n                            )}\r\n                        </ScrollView>\r\n                    </KeyboardAvoidingView>\r\n                </View>\r\n            </View>\r\n            <View>\r\n                <View style={styles.containers}>\r\n                    <TouchableOpacity style={{marginRight: 5}} onPress={toggleEmojiPicker}>\r\n                        <Entypo name=\"emoji-happy\" size={24} color=\"#555\"/>\r\n                    </TouchableOpacity>\r\n                    {showEmojiPicker && (\r\n                        <EmojiSelector\r\n                            onEmojiSelected={handleEmojiSelected}\r\n                            columns={8}\r\n                            showSearchBar={false}\r\n                            showSectionTitles={false}\r\n                            showTabs={false}\r\n                        />\r\n                    )}\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        placeholder=\"Type your message...\"\r\n                        value={inputMessage} // Use inputMessage instead of message\r\n                        onChangeText={setInputMessage} // Use setInputMessage to update inputMessage state\r\n                        multiline\r\n                    />\r\n                    <TouchableOpacity style={styles.sendButton} onPress={sendMessage} >\r\n                        <Ionicons name=\"send\" size={24} color=\"white\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#36802d',\r\n    },\r\n    ownMessageContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-end',\r\n        marginBottom: 10,\r\n    },\r\n    senderMessageContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        marginBottom: 10,\r\n    },\r\n    timestampText: {\r\n        color: 'white',\r\n        fontSize: 10,\r\n      },\r\n    ownMessage: {\r\n        backgroundColor: 'lightblue',\r\n        padding: 10,\r\n        borderRadius: 10,\r\n    },\r\n    senderMessage: {\r\n        backgroundColor: 'lightgreen',\r\n        padding: 10,\r\n        borderRadius: 10,\r\n    },\r\n    ownMessageText: {\r\n        color: 'black',\r\n    },\r\n    senderMessageText: {\r\n        color: 'black',\r\n    },  \r\n    containers: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        backgroundColor: '#FAF9F6',\r\n        paddingHorizontal: 10,\r\n        paddingVertical: 5,\r\n        borderTopWidth: 1,\r\n        borderTopColor: '#FAF9F6',\r\n    },\r\n    input: {\r\n        flex: 1,\r\n        minHeight: 40,\r\n        maxHeight: 120,\r\n        backgroundColor: 'white',\r\n        borderRadius: 20,\r\n        paddingHorizontal: 15,\r\n        paddingVertical: 10,\r\n        marginRight: 10,\r\n        borderWidth: 1,\r\n        borderColor: 'gray',\r\n    },\r\n    sendButton: {\r\n        backgroundColor: '#36802d',\r\n        borderRadius: 20,\r\n        padding: 10,\r\n    },\r\n    inputContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        paddingHorizontal: 10,\r\n        paddingBottom: 10,\r\n    },\r\n    backButton: {\r\n        top: 50,\r\n        left: 10,\r\n    },\r\n    middleContainer: {\r\n        flexDirection: 'row',\r\n       \r\n    },\r\n    userIcon: {\r\n        borderRadius: 50,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: 50,\r\n        height: 50,\r\n        borderWidth: 1,\r\n        borderColor: 'white',\r\n        left:40,\r\n        top:10\r\n    },\r\n    userInfo: {\r\n        top: 10,\r\n      \r\n    },\r\n    userName: {\r\n        fontSize: 20,\r\n        left:50\r\n    },\r\n    userStatus: {\r\n        fontSize: 10,\r\n        left:50\r\n    },\r\n    iconRow: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingHorizontal: 20,\r\n        marginTop: 10,\r\n        \r\n    },\r\n    iconButton: {\r\n        left:80,\r\n        margin:10\r\n    },\r\n    maincomponent: {\r\n        borderTopLeftRadius: 40,\r\n        borderTopRightRadius: 40,\r\n        backgroundColor: '#FAF9F6',\r\n        flex: 1,\r\n        marginTop: 25,\r\n    },\r\n});\r\n\r\nexport default ChatScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,eAAe,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,oBAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,KAAA;AAEjE,SAASC,YAAY,EAAEC,MAAM,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,oBAAoB;AAClF,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,aAAa,MAAM,6BAA6B;AACvD,SAASC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,UAAU,QAAQ,oBAAoB;AAChG,SAASC,eAAe,QAAQ,oBAAoB;AAEpD,SAASC,WAAW;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACjD,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAA8B;EAAA,IAAxBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;EACnC,IAAMC,IAAI,GAAGnB,WAAW,CAAC,UAACoB,KAAK;IAAA,OAAKA,KAAK,CAACD,IAAI;EAAA,EAAC;EAC/C,IAAAE,SAAA,GAAwCrC,QAAQ,CAAC,EAAE,CAAC;IAAAsC,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAAI,UAAA,GAAgC1C,QAAQ,CAAC,EAAE,CAAC;IAAA2C,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAAkC9C,QAAQ,CAAC,IAAI,CAAC;IAAA+C,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAzCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAA8ClD,QAAQ,CAAC,KAAK,CAAC;IAAAmD,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAtDE,eAAe,GAAAD,UAAA;IAAEE,kBAAkB,GAAAF,UAAA;EAC1C,IAAQG,IAAI,GAAKrB,KAAK,CAACsB,MAAM,CAArBD,IAAI;EAEZ,IAAME,aAAa,GAAGvD,MAAM,CAAC,CAAC;EAE9B,IAAMwD,WAAW;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC5B,IAAMC,SAAS,GAAGnC,eAAe,CAAC,CAAC;MACnC,IAAMoC,EAAE,GAAI,GAAEC,IAAI,CAACC,GAAG,CAAC,CAAE,EAAC;MAC1B,IAAMC,IAAI,GAAG;QACTC,GAAG,EAAEJ,EAAE;QACPK,MAAM,EAAEZ,IAAI,CAACW,GAAG;QAChBL,SAAS,EAAEA,SAAS;QACpBO,OAAO,EAAE3B,YAAY;QACrBL,IAAI,EAAEA;MACV,CAAC;MACDM,eAAe,CAAC,EAAE,CAAC;MACnB,IAAI;QACA,MAAMrB,MAAM,CAACC,UAAU,CAACH,GAAG,CAACQ,WAAW,EAAE,OAAO,EAAE4B,IAAI,CAACW,GAAG,CAAC,EAAE,UAAU,CAAC,EAAED,IAAI,CAAC;MACnF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CE,KAAK,CAAC,0CAA0C,CAAC;MACrD;IACJ,CAAC;IAAA,gBAjBKb,WAAWA,CAAA;MAAA,OAAAC,KAAA,CAAAa,KAAA,OAAAC,SAAA;IAAA;EAAA,GAiBhB;EAGDzE,eAAe,CAAC,YAAI;IAChB,IAAM0E,QAAQ,GAACnD,KAAK,CAChBD,UAAU,CAACK,WAAW,EAAC,OAAO,EAAC4B,IAAI,oBAAJA,IAAI,CAAEW,GAAG,EAAC,UAAU,CAAC,EACpD1C,OAAO,CAAC,WAAW,EAAC,KAAK,CAC7B,CAAC;IACD,IAAMmD,UAAU,GAAClD,UAAU,CAACiD,QAAQ,EAAC,UAACE,SAAS,EAAG;MAC9C,IAAMC,KAAK,GAACD,SAAS,CAACE,IAAI,CAACC,GAAG,CAAC,UAAA5D,GAAG;QAAA,OAAEA,GAAG,CAAC6D,IAAI,CAAC,CAAC;MAAA,EAAC;MAC/ClC,WAAW,CAAC+B,KAAK,CAAC;MAClB3B,YAAY,CAAC,KAAK,CAAC;MAEnB,IAAIO,aAAa,CAACwB,OAAO,EAAE;QACvBxB,aAAa,CAACwB,OAAO,CAACC,WAAW,CAAC;UAAEC,QAAQ,EAAE;QAAK,CAAC,CAAC;MACzD;IACJ,CAAC,CAAC;IACF,OAAOR,UAAU;EACrB,CAAC,EAAC,EAAE,CAAC;EAEL,IAAMS,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,KAAK,EAAK;IACnCvC,WAAW,CAACD,QAAQ,GAAGwC,KAAK,CAAC;EACjC,CAAC;EAED,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAC5BhC,kBAAkB,CAAC,CAACD,eAAe,CAAC;EACxC,CAAC;EAED,OACItB,KAAA,CAAC5B,IAAI;IAACoF,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1B7D,IAAA,CAACvB,gBAAgB;MAACiF,KAAK,EAAEC,MAAM,CAACG,UAAW;MAACC,OAAO,EAAEtB,OAAO,CAACuB,GAAG,CAAC,cAAc,CAAE;MAAAH,QAAA,EAC7E7D,IAAA,CAACd,aAAa;QAAC+E,IAAI,EAAC,cAAc;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAE;MAAQ,CAAE;IAAC,CACjD,CAAC,EAEnBjE,KAAA,CAAC5B,IAAI;MAACoF,KAAK,EAAEC,MAAM,CAACS,eAAgB;MAAAP,QAAA,GAChC7D,IAAA,CAAC1B,IAAI;QAACoF,KAAK,EAAEC,MAAM,CAACU,QAAS;QAAAR,QAAA,EACzB7D,IAAA,CAAChB,YAAY;UAACiF,IAAI,EAAC,OAAO;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAC;QAAS,CAAE;MAAC,CACrD,CAAC,EACPjE,KAAA,CAAC5B,IAAI;QAACoF,KAAK,EAAEC,MAAM,CAACW,QAAS;QAAAT,QAAA,GACzB7D,IAAA,CAACzB,IAAI;UAACmF,KAAK,EAAEC,MAAM,CAACY,QAAS;UAAAV,QAAA,EAAEnC,IAAI,CAAC8C,QAAQ,CAACC,MAAM,GAAG,EAAE,GAAI,GAAE/C,IAAI,CAAC8C,QAAQ,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAE,IAAG,GAAGhD,IAAI,CAAC8C;QAAQ,CAAO,CAAC,EACpHxE,IAAA,CAACzB,IAAI;UAACmF,KAAK,EAAEC,MAAM,CAACgB,UAAW;UAAAd,QAAA,EAAC;QAAM,CAAM,CAAC;MAAA,CAC3C,CAAC,EACP3D,KAAA,CAAC5B,IAAI;QAACoF,KAAK,EAAEC,MAAM,CAACiB,OAAQ;QAAAf,QAAA,GACxB7D,IAAA,CAACvB,gBAAgB;UAACiF,KAAK,EAAEC,MAAM,CAACkB,UAAW;UAAAhB,QAAA,EACvC7D,IAAA,CAAChB,YAAY;YAACiF,IAAI,EAAC,OAAO;YAACC,IAAI,EAAE,EAAG;YAACC,KAAK,EAAC;UAAS,CAAE;QAAC,CACzC,CAAC,EACnBnE,IAAA,CAACvB,gBAAgB;UAACiF,KAAK,EAAEC,MAAM,CAACkB,UAAW;UAAAhB,QAAA,EACvC7D,IAAA,CAAChB,YAAY;YAACiF,IAAI,EAAC,OAAO;YAACC,IAAI,EAAE,EAAG;YAACC,KAAK,EAAC;UAAS,CAAE;QAAC,CACzC,CAAC,EACnBnE,IAAA,CAACvB,gBAAgB;UAACiF,KAAK,EAAEC,MAAM,CAACkB,UAAW;UAAAhB,QAAA,EACvC7D,IAAA,CAACf,MAAM;YAACgF,IAAI,EAAC,qBAAqB;YAACC,IAAI,EAAE,EAAG;YAACC,KAAK,EAAC;UAAS,CAAE;QAAC,CACjD,CAAC;MAAA,CACjB,CAAC;IAAA,CACL,CAAC,EACPnE,IAAA,CAAC1B,IAAI;MAACoF,KAAK,EAAEC,MAAM,CAACmB,aAAc;MAAAjB,QAAA,EAC9B7D,IAAA,CAAC1B,IAAI;QAAAuF,QAAA,EACD7D,IAAA,CAACtB,oBAAoB;UAACqG,QAAQ,EAAEnG,QAAQ,CAACoG,EAAE,KAAG,KAAK,GAAC,SAAS,GAAC,QAAS;UAACC,sBAAsB,EAAE,GAAI;UAAApB,QAAA,EAChG7D,IAAA,CAACnB,UAAU;YACP6E,KAAK,EAAE;cAAEwB,SAAS,EAAE;YAAG,CAAE;YACzBC,GAAG,EAAEvD,aAAc;YACnBwD,mBAAmB,EAAE,SAAAA,oBAAA;cAAA,OAAMxD,aAAa,CAACwB,OAAO,CAACC,WAAW,CAAC;gBAAEC,QAAQ,EAAE;cAAK,CAAC,CAAC;YAAA,CAAC;YAAAO,QAAA,EAEhFzC,SAAS,GACNpB,IAAA,CAAC1B,IAAI;cAACoF,KAAK,EAAE;gBAAE2B,cAAc,EAAE,QAAQ;gBAAEC,UAAU,EAAE;cAAS,CAAE;cAAAzB,QAAA,EAC5D7D,IAAA,CAAClB,iBAAiB;gBAACoF,IAAI,EAAC,OAAO;gBAACC,KAAK,EAAC;cAAS,CAAE;YAAC,CAChD,CAAC,GAEPnD,QAAQ,oBAARA,QAAQ,CAAEkC,GAAG,CAAC,UAACqC,GAAG,EAAEC,CAAC;cAAA,IAAAC,cAAA,EAAAC,eAAA,EAAAC,SAAA,EAAAC,eAAA,EAAAC,eAAA;cAAA,OACjBN,GAAG,CAAChF,IAAI,CAACuF,YAAY,CAACC,KAAK,KAAKxF,IAAI,CAACuF,YAAY,CAACC,KAAK,GACnD7F,KAAA,CAAC5B,IAAI;gBACDoF,KAAK,EAAE;kBACHsC,SAAS,EAAE,UAAU;kBACrBC,OAAO,EAAE,CAAC;kBACVC,WAAW,EAAE,EAAE;kBACfC,YAAY,EAAE,EAAE;kBAChBC,YAAY,EAAE,CAAC;kBACfC,MAAM,EAAE,EAAE;kBACVC,oBAAoB,EAAE,EAAE;kBACxBC,sBAAsB,EAAE,EAAE;kBAC1BC,eAAe,EAAE,OAAO;kBACxBC,QAAQ,EAAE,KAAK;kBACfC,QAAQ,EAAE;gBACd,CAAE;gBAAA7C,QAAA,GAGF7D,IAAA,CAACzB,IAAI;kBAAAsF,QAAA,EAAE0B,GAAG,CAAChD;gBAAO,CAAO,CAAC,EAC1BvC,IAAA,CAAC1B,IAAI;kBAACoF,KAAK,EAAE;oBAAEsC,SAAS,EAAE,UAAU;oBAAEd,SAAS,EAAE;kBAAE,CAAE;kBAAArB,QAAA,EAChD,CAAA0B,GAAG,qBAAAE,cAAA,GAAHF,GAAG,CAAEvD,SAAS,qBAAdyD,cAAA,CAAgBkB,OAAO,KACpB3G,IAAA,CAACzB,IAAI;oBAACmF,KAAK,EAAEC,MAAM,CAACiD,aAAc;oBAAA/C,QAAA,EAC7B,IAAI3B,IAAI,CAAC2E,QAAQ,CAACtB,GAAG,qBAAAG,eAAA,GAAHH,GAAG,CAAEvD,SAAS,qBAAd0D,eAAA,CAAgBiB,OAAO,CAAC,GAAG,IAAI,CAAC,CAACG,kBAAkB,CAAC,OAAO,EAAE;sBAC5EC,IAAI,EAAE,SAAS;sBACfC,MAAM,EAAE,SAAS;sBACjBC,MAAM,EAAE;oBACZ,CAAC;kBAAC,CACA;gBACT,CACC,CAAC;cAAA,GAbD,GAAE1B,GAAG,CAAClD,GAAI,IAAGmD,CAAE,EAcnB,CAAC,GAEPtF,KAAA,CAAC5B,IAAI;gBAEDoF,KAAK,EAAE;kBACHwD,aAAa,EAAE,KAAK;kBACpB5B,UAAU,EAAE,YAAY;kBACxB6B,cAAc,EAAE;gBACpB,CAAE;gBAAAtD,QAAA,GAEF7D,IAAA,CAACjB,KAAK;kBACFqI,MAAM,EAAE;oBAAEC,GAAG,EAAE9B,GAAG,qBAAAI,SAAA,GAAHJ,GAAG,CAAEhF,IAAI,qBAAToF,SAAA,CAAW2B;kBAAW,CAAE;kBACvCC,UAAU,EAAC,OAAO;kBAClB7D,KAAK,EAAE;oBAAE2C,MAAM,EAAC,CAAC;oBAACmB,KAAK,EAAE,EAAE;oBAAEC,MAAM,EAAE,EAAE;oBAAErB,YAAY,EAAE,EAAE;oBAAEsB,WAAW,EAAE,CAAC;oBAAEC,WAAW,EAAE;kBAAU;gBAAE,CACvG,CAAC,EACFzH,KAAA,CAAC5B,IAAI;kBACDoF,KAAK,EAAE;oBACHsC,SAAS,EAAE,YAAY;oBACvBC,OAAO,EAAE,CAAC;oBACVC,WAAW,EAAE,EAAE;oBACfC,YAAY,EAAE,EAAE;oBAChBC,YAAY,EAAE,CAAC;oBACfwB,gBAAgB,EAAE,CAAC;oBACnBtB,oBAAoB,EAAE,EAAE;oBACxBC,sBAAsB,EAAE,EAAE;oBAC1BC,eAAe,EAAE,MAAM;oBACvBC,QAAQ,EAAE,KAAK;oBACfC,QAAQ,EAAE;kBACd,CAAE;kBAAA7C,QAAA,GAEF7D,IAAA,CAACzB,IAAI;oBAAAsF,QAAA,EAAE0B,GAAG,CAAChD;kBAAO,CAAO,CAAC,EAC1BvC,IAAA,CAAC1B,IAAI;oBAACoF,KAAK,EAAE;sBAAEsC,SAAS,EAAE,YAAY;sBAAEd,SAAS,EAAE;oBAAE,CAAE;oBAAArB,QAAA,EAClD,CAAA0B,GAAG,qBAAAK,eAAA,GAAHL,GAAG,CAAEvD,SAAS,qBAAd4D,eAAA,CAAgBe,OAAO,KACpB3G,IAAA,CAACzB,IAAI;sBAACmF,KAAK,EAAEC,MAAM,CAACiD,aAAc;sBAAA/C,QAAA,EAC7B,IAAI3B,IAAI,CAAC2E,QAAQ,CAACtB,GAAG,qBAAAM,eAAA,GAAHN,GAAG,CAAEvD,SAAS,qBAAd6D,eAAA,CAAgBc,OAAO,CAAC,GAAG,IAAI,CAAC,CAACG,kBAAkB,CAAC,OAAO,EAAE;wBAC5EC,IAAI,EAAE,SAAS;wBACfC,MAAM,EAAE,SAAS;wBACjBC,MAAM,EAAE;sBACZ,CAAC;oBAAC,CACA;kBACT,CACC,CAAC;gBAAA,CACL,CAAC;cAAA,GAvCD,GAAE1B,GAAG,CAAClD,GAAI,IAAGmD,CAAE,EAwCnB,CACT;YAAA,CACL;UACH,CACO;QAAC,CACK;MAAC,CACrB;IAAC,CACL,CAAC,EACPxF,IAAA,CAAC1B,IAAI;MAAAuF,QAAA,EACD3D,KAAA,CAAC5B,IAAI;QAACoF,KAAK,EAAEC,MAAM,CAACkE,UAAW;QAAAhE,QAAA,GAC3B7D,IAAA,CAACvB,gBAAgB;UAACiF,KAAK,EAAE;YAACoE,WAAW,EAAE;UAAC,CAAE;UAAC/D,OAAO,EAAEN,iBAAkB;UAAAI,QAAA,EAClE7D,IAAA,CAACf,MAAM;YAACgF,IAAI,EAAC,aAAa;YAACC,IAAI,EAAE,EAAG;YAACC,KAAK,EAAC;UAAM,CAAC;QAAC,CACrC,CAAC,EAClB3C,eAAe,IACZxB,IAAA,CAACX,aAAa;UACV0I,eAAe,EAAExE,mBAAoB;UACrCyE,OAAO,EAAE,CAAE;UACXC,aAAa,EAAE,KAAM;UACrBC,iBAAiB,EAAE,KAAM;UACzBC,QAAQ,EAAE;QAAM,CACnB,CACJ,EACDnI,IAAA,CAACrB,SAAS;UACN+E,KAAK,EAAEC,MAAM,CAACyE,KAAM;UACpBC,WAAW,EAAC,sBAAsB;UAClCC,KAAK,EAAE1H,YAAa;UACpB2H,YAAY,EAAE1H,eAAgB;UAC9B2H,SAAS;QAAA,CACZ,CAAC,EACFxI,IAAA,CAACvB,gBAAgB;UAACiF,KAAK,EAAEC,MAAM,CAAC8E,UAAW;UAAC1E,OAAO,EAAElC,WAAY;UAAAgC,QAAA,EAC7D7D,IAAA,CAACb,QAAQ;YAAC8E,IAAI,EAAC,MAAM;YAACC,IAAI,EAAE,EAAG;YAACC,KAAK,EAAC;UAAO,CAAE;QAAC,CAClC,CAAC;MAAA,CACjB;IAAC,CACL,CAAC;EAAA,CACL,CAAC;AAEf,CAAC;AAED,IAAMR,MAAM,GAAGnF,UAAU,CAACkK,MAAM,CAAC;EAC7B9E,SAAS,EAAE;IACP+E,IAAI,EAAE,CAAC;IACPnC,eAAe,EAAE;EACrB,CAAC;EACDoC,mBAAmB,EAAE;IACjB1B,aAAa,EAAE,KAAK;IACpB7B,cAAc,EAAE,UAAU;IAC1BwD,YAAY,EAAE;EAClB,CAAC;EACDC,sBAAsB,EAAE;IACpB5B,aAAa,EAAE,KAAK;IACpB7B,cAAc,EAAE,YAAY;IAC5BwD,YAAY,EAAE;EAClB,CAAC;EACDjC,aAAa,EAAE;IACXzC,KAAK,EAAE,OAAO;IACd4E,QAAQ,EAAE;EACZ,CAAC;EACHC,UAAU,EAAE;IACRxC,eAAe,EAAE,WAAW;IAC5BP,OAAO,EAAE,EAAE;IACXG,YAAY,EAAE;EAClB,CAAC;EACD6C,aAAa,EAAE;IACXzC,eAAe,EAAE,YAAY;IAC7BP,OAAO,EAAE,EAAE;IACXG,YAAY,EAAE;EAClB,CAAC;EACD8C,cAAc,EAAE;IACZ/E,KAAK,EAAE;EACX,CAAC;EACDgF,iBAAiB,EAAE;IACfhF,KAAK,EAAE;EACX,CAAC;EACD0D,UAAU,EAAE;IACRX,aAAa,EAAE,KAAK;IACpB5B,UAAU,EAAE,QAAQ;IACpBkB,eAAe,EAAE,SAAS;IAC1B4C,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,CAAC;IAClBC,cAAc,EAAE,CAAC;IACjBC,cAAc,EAAE;EACpB,CAAC;EACDnB,KAAK,EAAE;IACHO,IAAI,EAAE,CAAC;IACPa,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE,GAAG;IACdjD,eAAe,EAAE,OAAO;IACxBJ,YAAY,EAAE,EAAE;IAChBgD,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,EAAE;IACnBvB,WAAW,EAAE,EAAE;IACfJ,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE;EACjB,CAAC;EACDc,UAAU,EAAE;IACRjC,eAAe,EAAE,SAAS;IAC1BJ,YAAY,EAAE,EAAE;IAChBH,OAAO,EAAE;EACb,CAAC;EACDyD,cAAc,EAAE;IACZxC,aAAa,EAAE,KAAK;IACpB5B,UAAU,EAAE,QAAQ;IACpB8D,iBAAiB,EAAE,EAAE;IACrBO,aAAa,EAAE;EACnB,CAAC;EACD7F,UAAU,EAAE;IACR8F,GAAG,EAAE,EAAE;IACPC,IAAI,EAAE;EACV,CAAC;EACDzF,eAAe,EAAE;IACb8C,aAAa,EAAE;EAEnB,CAAC;EACD7C,QAAQ,EAAE;IACN+B,YAAY,EAAE,EAAE;IAChBd,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE,QAAQ;IACxBmC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,OAAO;IACpBkC,IAAI,EAAC,EAAE;IACPD,GAAG,EAAC;EACR,CAAC;EACDtF,QAAQ,EAAE;IACNsF,GAAG,EAAE;EAET,CAAC;EACDrF,QAAQ,EAAE;IACNwE,QAAQ,EAAE,EAAE;IACZc,IAAI,EAAC;EACT,CAAC;EACDlF,UAAU,EAAE;IACRoE,QAAQ,EAAE,EAAE;IACZc,IAAI,EAAC;EACT,CAAC;EACDjF,OAAO,EAAE;IACLsC,aAAa,EAAE,KAAK;IACpB5B,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE,eAAe;IAC/B+D,iBAAiB,EAAE,EAAE;IACrBlE,SAAS,EAAE;EAEf,CAAC;EACDL,UAAU,EAAE;IACRgF,IAAI,EAAC,EAAE;IACPxD,MAAM,EAAC;EACX,CAAC;EACDvB,aAAa,EAAE;IACXgF,mBAAmB,EAAE,EAAE;IACvBxD,oBAAoB,EAAE,EAAE;IACxBE,eAAe,EAAE,SAAS;IAC1BmC,IAAI,EAAE,CAAC;IACPzD,SAAS,EAAE;EACf;AACJ,CAAC,CAAC;AAEF,eAAe/E,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}