{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { avatars } from \"../Supports/avatar\";\nimport pic from \"../../assets/flower.jpg\";\nimport logo from \"../../assets/logo.png\";\nimport Input from \"../componets/Input\";\nimport Buttons from \"../componets/Buttons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login(props) {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isEmailValid = _useState6[0],\n    setIsEmailValid = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isPasswordValid = _useState8[0],\n    setIsPasswordValid = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isEmailTouched = _useState10[0],\n    setIsEmailTouched = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isPasswordTouched = _useState12[0],\n    setIsPasswordTouched = _useState12[1];\n  var _useState13 = useState(avatars[0].image.asset.url),\n    _useState14 = _slicedToArray(_useState13, 2),\n    avatar = _useState14[0],\n    setAvatar = _useState14[1];\n  useEffect(function () {\n    if (isEmailTouched && (!email.includes('@') || !email.includes('.com'))) {\n      setIsEmailValid(false);\n    } else if (email == \"\") {\n      setIsEmailValid(true);\n    } else {\n      setIsEmailValid(true);\n    }\n    if (isPasswordTouched && password.length < 6) {\n      setIsPasswordValid(false);\n    } else {\n      setIsPasswordValid(true);\n    }\n  }, [email, password, isEmailTouched, isPasswordTouched]);\n  var handleEmailChange = function handleEmailChange(text) {\n    setEmail(text);\n    setIsEmailTouched(true);\n  };\n  var handlePasswordChange = function handlePasswordChange(text) {\n    setPassword(text);\n    setIsPasswordTouched(true);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: pic,\n      style: styles.backgroundImage,\n      resizeMode: \"cover\"\n    }), _jsxs(View, {\n      style: styles.maincomponent,\n      children: [_jsx(Image, {\n        source: logo,\n        style: styles.logo,\n        resizeMode: \"contain\"\n      }), _jsx(TouchableOpacity, {\n        style: {\n          alignItems: \"center\"\n        },\n        children: _jsx(Image, {\n          source: {\n            uri: avatar\n          },\n          style: styles.avatarImage,\n          resizeMode: \"contain\"\n        })\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Welcome back!!\"\n      }), _jsx(Input, {\n        placeholder: \"Enter Email\",\n        value: email,\n        onChangeText: handleEmailChange\n      }), isEmailTouched && !isEmailValid && _jsx(Text, {\n        style: {\n          marginLeft: 50,\n          color: 'red'\n        },\n        children: \" Invalid Email\"\n      }), _jsx(Input, {\n        placeholder: \"Enter Password\",\n        value: password,\n        onChangeText: handlePasswordChange\n      }), isPasswordTouched && !isPasswordValid && _jsx(Text, {\n        style: {\n          marginLeft: 50,\n          color: 'red'\n        },\n        children: \" Invalid Password\"\n      }), _jsx(Buttons, {\n        title: \"Login\"\n      }), _jsxs(View, {\n        style: styles.loginContainer,\n        children: [_jsx(Text, {\n          style: styles.loginText,\n          children: \"Does't have an account??\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.navigate('Signup');\n          },\n          children: _jsx(Text, {\n            style: styles.loginLink,\n            children: \" Sign up\"\n          })\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  maincomponent: {\n    borderTopLeftRadius: 110,\n    backgroundColor: 'white',\n    marginTop: '40%'\n  },\n  logo: {\n    alignSelf: 'center',\n    height: '15%'\n  },\n  title: {\n    fontSize: 20,\n    color: 'black',\n    alignSelf: 'center'\n  },\n  backgroundImage: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    height: '50%'\n  },\n  avatarImage: {\n    width: 50,\n    height: 50\n  },\n  loginContainer: {\n    flexDirection: 'row',\n    marginTop: 30,\n    marginLeft: '25%',\n    fontSize: 15\n  },\n  loginText: {\n    color: 'black'\n  },\n  loginLink: {\n    color: '#36802D'\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","Image","TouchableOpacity","avatars","pic","logo","Input","Buttons","jsx","_jsx","jsxs","_jsxs","Login","props","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","isEmailValid","setIsEmailValid","_useState7","_useState8","isPasswordValid","setIsPasswordValid","_useState9","_useState10","isEmailTouched","setIsEmailTouched","_useState11","_useState12","isPasswordTouched","setIsPasswordTouched","_useState13","image","asset","url","_useState14","avatar","setAvatar","includes","length","handleEmailChange","text","handlePasswordChange","style","styles","container","children","source","backgroundImage","resizeMode","maincomponent","alignItems","uri","avatarImage","title","placeholder","value","onChangeText","marginLeft","color","loginContainer","loginText","onPress","navigation","navigate","loginLink","create","flex","backgroundColor","borderTopLeftRadius","marginTop","alignSelf","height","fontSize","position","top","left","right","width","flexDirection"],"sources":["C:/Users/786/Desktop/Chat-App/my-app/src/Screen/Login.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, Image, TouchableOpacity } from 'react-native';\r\n\r\nimport { avatars } from '../Supports/avatar';\r\nimport pic from '../../assets/flower.jpg';\r\nimport logo from '../../assets/logo.png';\r\nimport Input from '../componets/Input';\r\n\r\nimport Buttons from '../componets/Buttons';\r\n\r\nconst Login = (props) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isEmailValid, setIsEmailValid] = useState(true);\r\n  const [isPasswordValid, setIsPasswordValid] = useState(true);\r\n  const [isEmailTouched, setIsEmailTouched] = useState(false);\r\n  const [isPasswordTouched, setIsPasswordTouched] = useState(false);\r\n  const [avatar, setAvatar] = useState(avatars[0].image.asset.url);\r\n\r\n  useEffect(() => {\r\n    if (isEmailTouched && (!email.includes('@') || !email.includes('.com'))) {\r\n      setIsEmailValid(false);\r\n    }\r\n    else if(email==\"\")\r\n    {\r\n        setIsEmailValid(true);\r\n    } \r\n    else {\r\n      setIsEmailValid(true);\r\n    }\r\n\r\n    if (isPasswordTouched && password.length < 6) {\r\n      setIsPasswordValid(false);\r\n    } else {\r\n      setIsPasswordValid(true);\r\n    }\r\n  }, [email, password, isEmailTouched, isPasswordTouched]);\r\n\r\n  const handleEmailChange = (text) => {\r\n    setEmail(text);\r\n    setIsEmailTouched(true);\r\n  };\r\n\r\n  const handlePasswordChange = (text) => {\r\n    setPassword(text);\r\n    setIsPasswordTouched(true);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image source={pic} style={styles.backgroundImage} resizeMode=\"cover\" />\r\n      <View style={styles.maincomponent}>\r\n        <Image source={logo} style={styles.logo} resizeMode='contain' />\r\n        <TouchableOpacity style={{ alignItems: \"center\" }}>\r\n          <Image source={{ uri: avatar }} style={styles.avatarImage} resizeMode=\"contain\" />\r\n        </TouchableOpacity>\r\n        <Text style={styles.title}>Welcome back!!</Text>\r\n        <Input placeholder=\"Enter Email\" value={email} onChangeText={handleEmailChange} />\r\n        {isEmailTouched && !isEmailValid && <Text style={{ marginLeft: 50, color: 'red' }}> Invalid Email</Text>}\r\n        <Input placeholder=\"Enter Password\" value={password} onChangeText={handlePasswordChange} />\r\n        {isPasswordTouched && !isPasswordValid && <Text style={{ marginLeft: 50, color: 'red' }}> Invalid Password</Text>}\r\n        <Buttons title='Login' />\r\n        <View style={styles.loginContainer}>\r\n          <Text style={styles.loginText}>Does't have an account??</Text>\r\n          <TouchableOpacity onPress={() => props.navigation.navigate('Signup')}>\r\n            <Text style={styles.loginLink}> Sign up</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'white',\r\n  },\r\n  maincomponent: {\r\n    borderTopLeftRadius: 110,\r\n    backgroundColor: 'white',\r\n    marginTop: '40%'\r\n  },\r\n  logo: {\r\n    alignSelf: 'center',\r\n    height: '15%'\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    color: 'black',\r\n    alignSelf: 'center',\r\n  },\r\n  backgroundImage: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    height: '50%'\r\n  },\r\n  avatarImage: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  loginContainer: {\r\n    flexDirection: 'row',\r\n    marginTop: 30,\r\n    marginLeft: '25%',\r\n    fontSize: 15,\r\n  },\r\n  loginText: {\r\n    color: 'black',\r\n  },\r\n  loginLink: {\r\n    color: '#36802D',\r\n  }\r\n});\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}