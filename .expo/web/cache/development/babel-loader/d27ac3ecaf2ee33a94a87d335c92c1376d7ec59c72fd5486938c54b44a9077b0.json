{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { firestoreDB, firebaseAuth } from \"../config/firebase\";\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useDispatch } from 'react-redux';\nimport { SET_USER } from \"../context/actions/useractions\";\nimport Input from \"../componets/Input\";\nimport Buttons from \"../componets/Buttons\";\nimport { useNavigation } from '@react-navigation/native';\nimport { avatars } from \"../Supports/avatar\";\nimport pic from \"../../assets/flower.jpg\";\nimport logo from \"../../assets/logo.png\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isEmailValid = _useState6[0],\n    setIsEmailValid = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isPasswordValid = _useState8[0],\n    setIsPasswordValid = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isEmailTouched = _useState10[0],\n    setIsEmailTouched = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isPasswordTouched = _useState12[0],\n    setIsPasswordTouched = _useState12[1];\n  var _useState13 = useState(avatars[0].image.asset.url),\n    _useState14 = _slicedToArray(_useState13, 2),\n    avatar = _useState14[0],\n    setAvatar = _useState14[1];\n  var navigation = useNavigation();\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (isEmailTouched && (!email.includes('@') || !email.includes('.com'))) {\n      setIsEmailValid(false);\n    } else if (email === '') {\n      setIsEmailValid(true);\n    } else {\n      setIsEmailValid(true);\n    }\n    if (isPasswordTouched && password.length < 6) {\n      setIsPasswordValid(false);\n    } else if (password === '') {\n      setIsPasswordValid(true);\n    } else {\n      setIsPasswordValid(true);\n    }\n  }, [email, password, isEmailTouched, isPasswordTouched]);\n  var handleEmailChange = function handleEmailChange(text) {\n    setEmail(text);\n    setIsEmailTouched(true);\n  };\n  var handlePasswordChange = function handlePasswordChange(text) {\n    setPassword(text);\n    setIsPasswordTouched(true);\n  };\n  var handlelogin = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (isEmailValid && email !== '') {\n        try {\n          var userCred = yield signInWithEmailAndPassword(firebaseAuth, email, password);\n          if (userCred) {\n            console.log('User ID:', userCred.user.uid);\n            getDoc(doc(firestoreDB, 'user', userCred.user.uid)).then(function (docSnap) {\n              if (docSnap.exists()) {\n                console.log('user data:', docSnap.data());\n                dispatch(SET_USER(docSnap.data()));\n                navigation.replace('HomeScreen');\n              } else {\n                alert('User does not exist');\n              }\n            });\n          }\n        } catch (error) {\n          console.error('Error logging in:', error.message);\n          if (error.code === 'auth/invalid-credential') {\n            alert('Invalid credentials. Please check your email and password.');\n          } else {\n            alert('Error logging in. Please try again later.');\n          }\n        }\n      }\n    });\n    return function handlelogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: pic,\n      style: styles.backgroundImage,\n      resizeMode: \"cover\"\n    }), _jsxs(View, {\n      style: styles.maincomponent,\n      children: [_jsx(Image, {\n        source: logo,\n        style: styles.logo,\n        resizeMode: \"contain\"\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Welcome back!!\"\n      }), _jsx(Input, {\n        placeholder: \"Enter Email\",\n        value: email,\n        onChangeText: handleEmailChange\n      }), !email == '' && isEmailTouched && !isEmailValid && _jsx(Text, {\n        style: {\n          marginLeft: 50,\n          color: 'red'\n        },\n        children: \" Invalid Email\"\n      }), _jsx(Input, {\n        placeholder: \"Enter Password\",\n        secureTextEntry: true,\n        value: password,\n        onChangeText: handlePasswordChange\n      }), !password == '' && isPasswordTouched && !isPasswordValid && _jsx(Text, {\n        style: {\n          marginLeft: 50,\n          color: 'red'\n        },\n        children: \" Invalid Password\"\n      }), _jsx(Buttons, {\n        title: \"Login\",\n        onPress: handlelogin\n      }), _jsxs(View, {\n        style: styles.loginContainer,\n        children: [_jsx(Text, {\n          style: styles.loginText,\n          children: \"Does't have an account??\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Signup');\n          },\n          children: _jsx(Text, {\n            style: styles.loginLink,\n            children: \" Sign up\"\n          })\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FAF9F6'\n  },\n  maincomponent: {\n    borderTopLeftRadius: 110,\n    backgroundColor: '#FAF9F6',\n    marginTop: '40%'\n  },\n  logo: {\n    alignSelf: 'center',\n    height: '15%'\n  },\n  title: {\n    fontSize: 20,\n    color: 'black',\n    alignSelf: 'center'\n  },\n  backgroundImage: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    height: '50%'\n  },\n  avatarImage: {\n    width: 50,\n    height: 50\n  },\n  loginContainer: {\n    flexDirection: 'row',\n    marginTop: 30,\n    marginLeft: '25%',\n    fontSize: 15\n  },\n  loginText: {\n    color: 'black'\n  },\n  loginLink: {\n    color: '#36802D'\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","Image","TouchableOpacity","signInWithEmailAndPassword","firestoreDB","firebaseAuth","doc","getDoc","useDispatch","SET_USER","Input","Buttons","useNavigation","avatars","pic","logo","MaterialIcons","jsx","_jsx","jsxs","_jsxs","Login","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","isEmailValid","setIsEmailValid","_useState7","_useState8","isPasswordValid","setIsPasswordValid","_useState9","_useState10","isEmailTouched","setIsEmailTouched","_useState11","_useState12","isPasswordTouched","setIsPasswordTouched","_useState13","image","asset","url","_useState14","avatar","setAvatar","navigation","dispatch","includes","length","handleEmailChange","text","handlePasswordChange","handlelogin","_ref","_asyncToGenerator","userCred","console","log","user","uid","then","docSnap","exists","data","replace","alert","error","message","code","apply","arguments","style","styles","container","children","source","backgroundImage","resizeMode","maincomponent","title","placeholder","value","onChangeText","marginLeft","color","secureTextEntry","onPress","loginContainer","loginText","navigate","loginLink","create","flex","backgroundColor","borderTopLeftRadius","marginTop","alignSelf","height","fontSize","position","top","left","right","avatarImage","width","flexDirection"],"sources":["C:/Users/786/Desktop/Chat-App/my-app/src/Screen/Login.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, Image, TouchableOpacity } from 'react-native';\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { firestoreDB, firebaseAuth } from '../config/firebase';\r\nimport { doc, getDoc } from 'firebase/firestore';\r\nimport { useDispatch } from 'react-redux';\r\nimport { SET_USER } from '../context/actions/useractions';\r\nimport Input from '../componets/Input';\r\nimport Buttons from '../componets/Buttons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { avatars } from '../Supports/avatar';\r\nimport pic from '../../assets/flower.jpg';\r\nimport logo from '../../assets/logo.png'\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isEmailValid, setIsEmailValid] = useState(true);\r\n  const [isPasswordValid, setIsPasswordValid] = useState(true);\r\n  const [isEmailTouched, setIsEmailTouched] = useState(false);\r\n  const [isPasswordTouched, setIsPasswordTouched] = useState(false);\r\n  const [avatar, setAvatar] = useState(avatars[0].image.asset.url);\r\n  const navigation = useNavigation();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (isEmailTouched && (!email.includes('@') || !email.includes('.com'))) {\r\n      setIsEmailValid(false);\r\n    } else if (email === '') {\r\n      setIsEmailValid(true);\r\n    } else {\r\n      setIsEmailValid(true);\r\n    }\r\n\r\n    if (isPasswordTouched && password.length < 6) {\r\n      setIsPasswordValid(false);\r\n    } else if (password === '') {\r\n      setIsPasswordValid(true);\r\n    } else {\r\n      setIsPasswordValid(true);\r\n    }\r\n  }, [email, password, isEmailTouched, isPasswordTouched]);\r\n\r\n  const handleEmailChange = (text) => {\r\n    setEmail(text);\r\n    setIsEmailTouched(true);\r\n  };\r\n\r\n  const handlePasswordChange = (text) => {\r\n    setPassword(text);\r\n    setIsPasswordTouched(true);\r\n  };\r\n\r\n  const handlelogin = async () => {\r\n    if (isEmailValid && email !== '') {\r\n      try {\r\n        const userCred = await signInWithEmailAndPassword(firebaseAuth, email, password);\r\n        if (userCred) {\r\n          console.log('User ID:', userCred.user.uid);\r\n          getDoc(doc(firestoreDB, 'user', userCred.user.uid)).then((docSnap) => {\r\n            if (docSnap.exists()) {\r\n              console.log('user data:', docSnap.data());\r\n              dispatch(SET_USER(docSnap.data()));\r\n              // Redirect to HomeScreen upon successful login\r\n              navigation.replace('HomeScreen');\r\n            } else {\r\n              alert('User does not exist');\r\n            }\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error logging in:', error.message);\r\n        if (error.code === 'auth/invalid-credential') {\r\n          // Handle invalid credential error\r\n          alert('Invalid credentials. Please check your email and password.');\r\n        } else {\r\n          // Handle other errors\r\n          alert('Error logging in. Please try again later.');\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image source={pic} style={styles.backgroundImage} resizeMode=\"cover\" />\r\n      <View style={styles.maincomponent}>\r\n        <Image source={logo} style={styles.logo} resizeMode='contain' />\r\n        \r\n        <Text style={styles.title}>Welcome back!!</Text>\r\n        <Input placeholder=\"Enter Email\" value={email} onChangeText={handleEmailChange} />\r\n        {!email == '' && isEmailTouched && !isEmailValid && <Text style={{ marginLeft: 50, color: 'red' }}> Invalid Email</Text>}\r\n        <Input placeholder=\"Enter Password\" secureTextEntry={true} value={password} onChangeText={handlePasswordChange} />\r\n        {!password == '' && isPasswordTouched && !isPasswordValid && <Text style={{ marginLeft: 50, color: 'red' }}> Invalid Password</Text>}\r\n        <Buttons title='Login' onPress={handlelogin} />\r\n        <View style={styles.loginContainer}>\r\n          <Text style={styles.loginText}>Does't have an account??</Text>\r\n          <TouchableOpacity onPress={() => navigation.navigate('Signup')}>\r\n            <Text style={styles.loginLink}> Sign up</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#FAF9F6',\r\n  },\r\n  maincomponent: {\r\n    borderTopLeftRadius: 110,\r\n    backgroundColor: '#FAF9F6',\r\n    marginTop: '40%'\r\n  },\r\n  logo: {\r\n    alignSelf: 'center',\r\n    height: '15%'\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    color: 'black',\r\n    alignSelf: 'center',\r\n  },\r\n  backgroundImage: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    height: '50%'\r\n  },\r\n  avatarImage: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  loginContainer: {\r\n    flexDirection: 'row',\r\n    marginTop: 30,\r\n    marginLeft: '25%',\r\n    fontSize: 15,\r\n  },\r\n  loginText: {\r\n    color: 'black',\r\n  },\r\n  loginLink: {\r\n    color: '#36802D',\r\n  }\r\n});\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}