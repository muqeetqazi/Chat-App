{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport react, { useEffect, useLayoutEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Signup from \"./Signup\";\nimport logo from \"../../assets/logo.png\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { firebaseAuth, firestoreDB } from \"../config/firebase\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { useDispatch } from \"react-redux\";\nimport HomeScreen from \"./HomeScreen\";\nimport Login from \"./Login\";\nimport { SET_USER } from \"../context/actions/useractions\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Splash = function Splash(props) {\n  var navigation = useNavigation();\n  var dispatch = useDispatch();\n  useLayoutEffect(function () {\n    checkLoggedUser();\n  }, []);\n  var checkLoggedUser = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        firebaseAuth.onAuthStateChanged(function () {\n          var _ref2 = _asyncToGenerator(function* (userCred) {\n            if (userCred != null && userCred.uid) {\n              var docSnap = yield getDoc(doc(firestoreDB, \"user\", userCred.uid));\n              if (docSnap.exists()) {\n                console.log(\"User Data :\", docSnap.data());\n                dispatch(SET_USER(docSnap.data()));\n              }\n              setInterval(function () {\n                navigation.replace(\"Login\");\n              }, 2000);\n            } else {\n              navigation.replace(\"HomeScreen\");\n            }\n          });\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n      } catch (error) {\n        console.error(\"Error checking logged user:\", error);\n      }\n    });\n    return function checkLoggedUser() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: logo,\n      resizeMode: \"contain\"\n    }), _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#43C651\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FAF9F6',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default Splash;","map":{"version":3,"names":["useNavigation","react","useEffect","useLayoutEffect","Text","View","StyleSheet","Image","Signup","logo","ActivityIndicator","firebaseAuth","firestoreDB","doc","getDoc","useDispatch","HomeScreen","Login","SET_USER","onAuthStateChanged","jsx","_jsx","jsxs","_jsxs","Splash","props","navigation","dispatch","checkLoggedUser","_ref","_asyncToGenerator","_ref2","userCred","uid","docSnap","exists","console","log","data","setInterval","replace","_x","apply","arguments","error","style","styles","container","children","source","resizeMode","size","color","create","flex","backgroundColor","justifyContent","alignContent","alignItems"],"sources":["C:/Users/786/Desktop/Chat-App/my-app/src/Screen/Splash.js"],"sourcesContent":["import { useNavigation } from \"@react-navigation/native\";\r\nimport react, { useEffect, useLayoutEffect } from \"react\";\r\nimport { Text,View,StyleSheet,Image } from \"react-native\";\r\nimport Signup from \"./Signup\";\r\nimport logo from '../../assets/logo.png';\r\nimport { ActivityIndicator } from \"react-native\";\r\nimport { firebaseAuth, firestoreDB } from \"../config/firebase\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport HomeScreen from \"./HomeScreen\";\r\nimport Login from \"./Login\";\r\nimport { SET_USER } from \"../context/actions/useractions\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\n\r\nconst Splash=(props)=>{\r\n    const navigation=useNavigation();\r\n  const dispatch=useDispatch();\r\n    useLayoutEffect(()=>{\r\n        checkLoggedUser();\r\n    },[])\r\n    const checkLoggedUser = async () => {\r\n        try {\r\n            firebaseAuth.onAuthStateChanged(async (userCred) => {\r\n                if (userCred?.uid) {\r\n                    const docSnap = await getDoc(doc(firestoreDB, \"user\", userCred.uid));\r\n                    if (docSnap.exists()) {\r\n                        console.log(\"User Data :\", docSnap.data());\r\n                        dispatch(SET_USER(docSnap.data()));\r\n                    }\r\n                    setInterval(() => {\r\n                        navigation.replace(\"Login\");\r\n                    }, 2000);\r\n                } else {\r\n                    navigation.replace(\"HomeScreen\");\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Error checking logged user:\", error);\r\n        }\r\n    };\r\n    \r\n    return(\r\n        <View style={styles.container}>\r\n            <Image source={logo} resizeMode='contain' />\r\n            <ActivityIndicator size={\"large\"} color={\"#43C651\"}/>\r\n        </View>\r\n    )\r\n}\r\n\r\n        const styles = StyleSheet.create({\r\n            container: {\r\n                flex: 1,\r\n                backgroundColor: '#FAF9F6',\r\n                justifyContent: 'center',\r\n                alignContent: 'center',\r\n                alignItems: 'center'\r\n            }\r\n          });\r\n          \r\n    \r\nexport default Splash;"],"mappings":";AAAA,SAASA,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,KAAK,IAAIC,SAAS,EAAEC,eAAe,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAE1D,OAAOC,MAAM;AACb,OAAOC,IAAI;AAA8B,OAAAC,iBAAA;AAEzC,SAASC,YAAY,EAAEC,WAAW;AAClC,SAASC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAChD,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,UAAU;AACjB,OAAOC,KAAK;AACZ,SAASC,QAAQ;AACjB,SAASC,kBAAkB,QAAQ,eAAe;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEnD,IAAMC,MAAM,GAAC,SAAPA,MAAMA,CAAEC,KAAK,EAAG;EAClB,IAAMC,UAAU,GAAC1B,aAAa,CAAC,CAAC;EAClC,IAAM2B,QAAQ,GAACZ,WAAW,CAAC,CAAC;EAC1BZ,eAAe,CAAC,YAAI;IAChByB,eAAe,CAAC,CAAC;EACrB,CAAC,EAAC,EAAE,CAAC;EACL,IAAMA,eAAe;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAChC,IAAI;QACAnB,YAAY,CAACQ,kBAAkB;UAAA,IAAAY,KAAA,GAAAD,iBAAA,CAAC,WAAOE,QAAQ,EAAK;YAChD,IAAIA,QAAQ,YAARA,QAAQ,CAAEC,GAAG,EAAE;cACf,IAAMC,OAAO,SAASpB,MAAM,CAACD,GAAG,CAACD,WAAW,EAAE,MAAM,EAAEoB,QAAQ,CAACC,GAAG,CAAC,CAAC;cACpE,IAAIC,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;gBAClBC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,OAAO,CAACI,IAAI,CAAC,CAAC,CAAC;gBAC1CX,QAAQ,CAACT,QAAQ,CAACgB,OAAO,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;cACtC;cACAC,WAAW,CAAC,YAAM;gBACdb,UAAU,CAACc,OAAO,CAAC,OAAO,CAAC;cAC/B,CAAC,EAAE,IAAI,CAAC;YACZ,CAAC,MAAM;cACHd,UAAU,CAACc,OAAO,CAAC,YAAY,CAAC;YACpC;UACJ,CAAC;UAAA,iBAAAC,EAAA;YAAA,OAAAV,KAAA,CAAAW,KAAA,OAAAC,SAAA;UAAA;QAAA,IAAC;MACN,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZR,OAAO,CAACQ,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ,CAAC;IAAA,gBAnBKhB,eAAeA,CAAA;MAAA,OAAAC,IAAA,CAAAa,KAAA,OAAAC,SAAA;IAAA;EAAA,GAmBpB;EAED,OACIpB,KAAA,CAAClB,IAAI;IAACwC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1B3B,IAAA,CAACd,KAAK;MAAC0C,MAAM,EAAExC,IAAK;MAACyC,UAAU,EAAC;IAAS,CAAE,CAAC,EAC5C7B,IAAA,CAACX,iBAAiB;MAACyC,IAAI,EAAE,OAAQ;MAACC,KAAK,EAAE;IAAU,CAAC,CAAC;EAAA,CACnD,CAAC;AAEf,CAAC;AAEO,IAAMN,MAAM,GAAGxC,UAAU,CAAC+C,MAAM,CAAC;EAC7BN,SAAS,EAAE;IACPO,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,SAAS;IAC1BC,cAAc,EAAE,QAAQ;IACxBC,YAAY,EAAE,QAAQ;IACtBC,UAAU,EAAE;EAChB;AACF,CAAC,CAAC;AAGZ,eAAelC,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}